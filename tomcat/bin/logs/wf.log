INFO 2019-06-05 21:23:01:
Parsing configuration file [struts-default.xml]
INFO 2019-06-05 21:23:01:
Parsing configuration file [struts-plugin.xml]
INFO 2019-06-05 21:23:01:
Parsing configuration file [struts.xml]
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.ObjectFactory)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ActionFactory)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ResultFactory)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ConverterFactory)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.InterceptorFactory)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ValidatorFactory)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.UnknownHandlerFactory)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.FileManagerFactory)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.XWorkConverter)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.CollectionConverter)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.ArrayConverter)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.DateConverter)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.NumberConverter)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.StringConverter)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ConversionPropertiesProcessor)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ConversionFileProcessor)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ConversionAnnotationProcessor)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.TypeConverterCreator)
INFO 2019-06-05 21:23:01:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.TypeConverterHolder)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.TextProvider)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.LocaleProvider)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.ActionProxyFactory)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ObjectTypeDeterminer)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (org.apache.struts2.dispatcher.mapper.ActionMapper)
INFO 2019-06-05 21:23:02:
Choosing bean (jakarta) for (org.apache.struts2.dispatcher.multipart.MultiPartRequest)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (org.apache.struts2.views.freemarker.FreemarkerManager)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (org.apache.struts2.components.UrlRenderer)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.validator.ActionValidatorManager)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.util.ValueStackFactory)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.util.reflection.ReflectionProvider)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.util.reflection.ReflectionContextFactory)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.util.PatternMatcher)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (org.apache.struts2.util.ContentTypeMatcher)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (org.apache.struts2.dispatcher.StaticContentLoader)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.UnknownHandlerManager)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (org.apache.struts2.views.util.UrlHelper)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.util.TextParser)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (org.apache.struts2.dispatcher.DispatcherErrorHandler)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.security.ExcludedPatternsChecker)
INFO 2019-06-05 21:23:02:
Choosing bean (struts) for (com.opensymphony.xwork2.security.AcceptedPatternsChecker)
INFO 2019-06-05 21:23:02:
系统初始化中...v4.20170616B
INFO 2019-06-05 21:23:02:
项目ID:WF_CAR---项目名称:car---启动模式:local
INFO 2019-06-05 21:23:02:
配置库  wf_tianyi链接池创建成功!
INFO 2019-06-05 21:23:02:
业务库CAR链接池创建成功!
INFO 2019-06-05 21:23:02:
ftpz FTP服务器 127.0.0.1:21 配置完毕.
INFO 2019-06-05 21:23:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_CUSTOM_DEF where FUNCNO=0
INFO 2019-06-05 21:23:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_CUSTOM_DETAIL where FUNCNO=0
INFO 2019-06-05 21:23:02:
本系统未定义初始化环境变量.
INFO 2019-06-05 21:23:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select wm_concat(distinct trim(func_type)) from WF_CAR.sys_window_def
INFO 2019-06-05 21:23:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select wm_concat(distinct trim(inputtype)) from WF_CAR.sys_form_detail
INFO 2019-06-05 21:23:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select count(*) from WF_CAR.sys_query_detail where chart_col is not null and chart_col<>'none'
INFO 2019-06-05 21:23:02:
WFINFO>>窗口类型(db)：[{"type":"D","detail":""},{"type":"F","detail":"date,img,select,text,textselect"},{"type":"P","detail":""},{"type":"Q","detail":""}]
INFO 2019-06-05 21:23:02:
系统启动成功！ 
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERID#值为：ws001
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERNAME#值为：王松
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.SEX#值为：男
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.ADDRESS#值为：湖北黄冈
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.MOBILEPHONE#值为：13995976290
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.IDCARD#值为：421122199608261035
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.AGE#值为：23
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERHEADFILE#值为：c342fa0dc16e7110&0.jpg&.jpg
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYEAR#值为：2019
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTMONTH#值为：06
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTDAY#值为：05
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYM#值为：201906
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYMD#值为：20190605
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-TODAY#值为：2019-06-05
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-BYEAR#值为：2019
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select count(*) from user_tables where table_name = 'WF_USERINFOEX'
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from WF_CAR.SYS_USERINFO where USERID='ws001'
INFO 2019-06-05 21:24:38:
ws001 登录成功---Wed Jun 05 21:24:38 CST 2019
INFO 2019-06-05 21:24:38:
WFDEBUG>>*>>*>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>ws001 登录成功---Wed Jun 05 21:24:38 CST 2019
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:24:40:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '2'
INFO 2019-06-05 21:24:40:
WFINFO>>角色2有0个角色行条件被加载
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('2')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:24:40:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('2') and rm.isdefault = 'Y'
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 74
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 74
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:74
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=73
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=73 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=73 and userid='ws001'
INFO 2019-06-05 21:24:40:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:73
INFO 2019-06-05 21:24:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ))
INFO 2019-06-05 21:24:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:24:41:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>[4ms]73:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:25:18:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '2'
INFO 2019-06-05 21:25:18:
WFINFO>>角色2有0个角色行条件被加载
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('2')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:25:18:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('2') and rm.isdefault = 'Y'
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 74
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 74
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:74
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=73
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=73 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=73 and userid='ws001'
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义Q:73
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ))
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:25:18:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>[6ms]73:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:25:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 75
INFO 2019-06-05 21:25:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 75
INFO 2019-06-05 21:25:20:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:75
INFO 2019-06-05 21:25:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=74
INFO 2019-06-05 21:25:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=74 order by ord
INFO 2019-06-05 21:25:20:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[23ms]非JSON找到定义F:74
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:25:27:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '2'
INFO 2019-06-05 21:25:27:
WFINFO>>角色2有0个角色行条件被加载
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('2')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:25:27:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('2') and rm.isdefault = 'Y'
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 74
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 74
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:74
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=73
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=73 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=73 and userid='ws001'
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[14ms]非JSON找到定义Q:73
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ))
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:25:27:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>[4ms]73:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:25:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ))
INFO 2019-06-05 21:25:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:25:28:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>[3ms]73:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:25:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 75
INFO 2019-06-05 21:25:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 75
INFO 2019-06-05 21:25:29:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:75
INFO 2019-06-05 21:25:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=74
INFO 2019-06-05 21:25:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=74 order by ord
INFO 2019-06-05 21:25:29:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[14ms]非JSON找到定义F:74
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:25:45:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '2'
INFO 2019-06-05 21:25:45:
WFINFO>>角色2有0个角色行条件被加载
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('2')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:25:45:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('2') and rm.isdefault = 'Y'
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 74
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 74
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:74
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=73
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=73 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=73 and userid='ws001'
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义Q:73
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ))
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:25:45:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>[3ms]73:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:25:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 75
INFO 2019-06-05 21:25:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 75
INFO 2019-06-05 21:25:51:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:75
INFO 2019-06-05 21:25:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=74
INFO 2019-06-05 21:25:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=74 order by ord
INFO 2019-06-05 21:25:51:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[16ms]非JSON找到定义F:74
INFO 2019-06-05 21:26:19:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>***CMD={check_func:"escape",proc0:"w_user_insert_sys",data0:[{name:"ui.username",value:"dfsfs",type:"CHAR"},{name:"ui.userid",value:"dsd",type:"CHAR"},{name:"ui.userheadfile",value:"",type:"CHAR"},{name:"ui.sex",value:"男",type:"CHAR"},{name:"ui.password",value:"",type:"CHAR"},{name:"ui.mobilephone",value:"12345678641",type:"NUMBER"},{name:"ui.idcard",value:"110101199003075592",type:"NUMBER"},{name:"ui.age",value:"",type:"NUMBER"},{name:"ui.address",value:"sas",type:"CHAR"},{name:"userinfo.username",value:"王松",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-06-05 21:26:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_user_insert_sys(?,?,?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ui.username: dfsfs --  CHAR
	ui.userid: dsd --  CHAR
	ui.userheadfile:  --  CHAR
	ui.sex: 男 --  CHAR
	ui.password:  --  CHAR
	ui.mobilephone: 12345678641 --  NUMBER
	ui.idcard: 110101199003075592 --  NUMBER
	ui.age:  --  NUMBER
	ui.address: sas --  CHAR
	userinfo.username: 王松 --  CHAR

INFO 2019-06-05 21:26:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ))
INFO 2019-06-05 21:26:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:26:19:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>[6ms]73:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:26:52:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>***CMD={check_func:"escape",proc0:"w_user_insert_sys",data0:[{name:"ui.username",value:"dads",type:"CHAR"},{name:"ui.userid",value:"addsda",type:"CHAR"},{name:"ui.userheadfile",value:"",type:"CHAR"},{name:"ui.sex",value:"男",type:"CHAR"},{name:"ui.password",value:"",type:"CHAR"},{name:"ui.mobilephone",value:"12345432343",type:"NUMBER"},{name:"ui.idcard",value:"110101199003075592",type:"NUMBER"},{name:"ui.age",value:"",type:"NUMBER"},{name:"ui.address",value:"dsd",type:"CHAR"},{name:"userinfo.username",value:"王松",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-06-05 21:26:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_user_insert_sys(?,?,?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ui.username: dads --  CHAR
	ui.userid: addsda --  CHAR
	ui.userheadfile:  --  CHAR
	ui.sex: 男 --  CHAR
	ui.password:  --  CHAR
	ui.mobilephone: 12345432343 --  NUMBER
	ui.idcard: 110101199003075592 --  NUMBER
	ui.age:  --  NUMBER
	ui.address: dsd --  CHAR
	userinfo.username: 王松 --  CHAR

INFO 2019-06-05 21:27:10:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>***CMD={check_func:"escape",proc0:"w_user_insert_sys",data0:[{name:"ui.username",value:"dads",type:"CHAR"},{name:"ui.userid",value:"cww",type:"CHAR"},{name:"ui.userheadfile",value:"",type:"CHAR"},{name:"ui.sex",value:"男",type:"CHAR"},{name:"ui.password",value:"",type:"CHAR"},{name:"ui.mobilephone",value:"12345432343",type:"NUMBER"},{name:"ui.idcard",value:"110101199003074397",type:"NUMBER"},{name:"ui.age",value:"",type:"NUMBER"},{name:"ui.address",value:"dsd",type:"CHAR"},{name:"userinfo.username",value:"王松",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-06-05 21:27:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_user_insert_sys(?,?,?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ui.username: dads --  CHAR
	ui.userid: cww --  CHAR
	ui.userheadfile:  --  CHAR
	ui.sex: 男 --  CHAR
	ui.password:  --  CHAR
	ui.mobilephone: 12345432343 --  NUMBER
	ui.idcard: 110101199003074397 --  NUMBER
	ui.age:  --  NUMBER
	ui.address: dsd --  CHAR
	userinfo.username: 王松 --  CHAR

INFO 2019-06-05 21:27:15:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>***CMD={check_func:"escape",proc0:"w_user_insert_sys",data0:[{name:"ui.username",value:"dads",type:"CHAR"},{name:"ui.userid",value:"cww1",type:"CHAR"},{name:"ui.userheadfile",value:"",type:"CHAR"},{name:"ui.sex",value:"男",type:"CHAR"},{name:"ui.password",value:"",type:"CHAR"},{name:"ui.mobilephone",value:"12345432343",type:"NUMBER"},{name:"ui.idcard",value:"110101199003074397",type:"NUMBER"},{name:"ui.age",value:"",type:"NUMBER"},{name:"ui.address",value:"dsd",type:"CHAR"},{name:"userinfo.username",value:"王松",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-06-05 21:27:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_user_insert_sys(?,?,?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ui.username: dads --  CHAR
	ui.userid: cww1 --  CHAR
	ui.userheadfile:  --  CHAR
	ui.sex: 男 --  CHAR
	ui.password:  --  CHAR
	ui.mobilephone: 12345432343 --  NUMBER
	ui.idcard: 110101199003074397 --  NUMBER
	ui.age:  --  NUMBER
	ui.address: dsd --  CHAR
	userinfo.username: 王松 --  CHAR

INFO 2019-06-05 21:27:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ))
INFO 2019-06-05 21:27:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:27:15:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>[6ms]73:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:27:18:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>***CMD={check_func:"escape",proc0:"w_user_delete_sys",data0:[{name:"ui.username",value:"dfsfs",type:"CHAR"},{name:"ui.userid",value:"dsd",type:"CHAR"},{name:"userinfo.username",value:"王松",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-06-05 21:27:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_user_delete_sys(?,?,?,?)}
参数列表	参数名: 值  --  类型
	ui.username: dfsfs --  CHAR
	ui.userid: dsd --  CHAR
	userinfo.username: 王松 --  CHAR

INFO 2019-06-05 21:27:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ))
INFO 2019-06-05 21:27:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:27:18:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>[6ms]73:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:27:22:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>***CMD={check_func:"escape",proc0:"w_user_delete_sys",data0:[{name:"ui.username",value:"dads",type:"CHAR"},{name:"ui.userid",value:"cww1",type:"CHAR"},{name:"userinfo.username",value:"王松",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-06-05 21:27:22:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_user_delete_sys(?,?,?,?)}
参数列表	参数名: 值  --  类型
	ui.username: dads --  CHAR
	ui.userid: cww1 --  CHAR
	userinfo.username: 王松 --  CHAR

INFO 2019-06-05 21:27:22:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ))
INFO 2019-06-05 21:27:22:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:27:22:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>[5ms]73:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:27:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 77
INFO 2019-06-05 21:27:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 77
INFO 2019-06-05 21:27:24:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:77
INFO 2019-06-05 21:27:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=76
INFO 2019-06-05 21:27:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=76 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:27:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=76 and userid='ws001'
INFO 2019-06-05 21:27:24:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义Q:76
INFO 2019-06-05 21:27:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-06-05 21:27:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:27:24:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>[4ms]76:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:32:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:32:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:32:52:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws001' order by ROLEID
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '2'
INFO 2019-06-05 21:32:53:
WFINFO>>角色2有0个角色行条件被加载
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('2')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:32:53:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('2') and rm.isdefault = 'Y'
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 74
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 74
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义W:74
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=73
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=73 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=73 and userid='ws001'
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[18ms]非JSON找到定义Q:73
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ))
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:32:53:
WFDEBUG>>*>>WF_CAR>>ws001>>18FA78A72C519A8FEC6899F8F12FAC5B>>[9ms]73:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.address,ui.mobilephone,ui.age,ur.roleid from userinfo ui,user_role ur where (ui.userid = ur.userid ) AND (ur.roleid = '0' ) AND (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERID#值为：cww
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERNAME#值为：曹威威
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.SEX#值为：男
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.ADDRESS#值为：湖北大冶
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.MOBILEPHONE#值为：13566942232
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.IDCARD#值为：330781198509076593
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.AGE#值为：23
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERHEADFILE#值为：
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYEAR#值为：2019
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTMONTH#值为：06
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTDAY#值为：05
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYM#值为：201906
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYMD#值为：20190605
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-TODAY#值为：2019-06-05
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-BYEAR#值为：2019
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select count(*) from user_tables where table_name = 'WF_USERINFOEX'
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from WF_CAR.SYS_USERINFO where USERID='cww'
INFO 2019-06-05 21:33:05:
cww 登录成功---Wed Jun 05 21:33:05 CST 2019
INFO 2019-06-05 21:33:05:
WFDEBUG>>*>>*>>cww>>CA25DC125EF103AB35C852C27892B597>>cww 登录成功---Wed Jun 05 21:33:05 CST 2019
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:33:07:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-06-05 21:33:07:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:33:07:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:2
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='cww'
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:2
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:07:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[8ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:33:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:13:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 67
INFO 2019-06-05 21:33:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 67
INFO 2019-06-05 21:33:16:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:67
INFO 2019-06-05 21:33:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=67
INFO 2019-06-05 21:33:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=67 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:33:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=67 and userid='cww'
INFO 2019-06-05 21:33:16:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:67
INFO 2019-06-05 21:33:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,ui.username,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime,c.carstatus from car c,userinfo ui where (c.carstatus = '待审核' ) AND (c.userid = ui.userid ))
INFO 2019-06-05 21:33:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,ui.username,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime,c.carstatus from car c,userinfo ui where (c.carstatus = '待审核' ) AND (c.userid = ui.userid ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:16:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[6ms]67:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,ui.username,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime,c.carstatus from car c,userinfo ui where (c.carstatus = '待审核' ) AND (c.userid = ui.userid ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:33:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:17:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 12
INFO 2019-06-05 21:33:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 12
INFO 2019-06-05 21:33:17:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[19ms]非JSON找到定义W:12
INFO 2019-06-05 21:33:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=14
INFO 2019-06-05 21:33:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=14 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:33:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=14 and userid='cww'
INFO 2019-06-05 21:33:17:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[14ms]非JSON找到定义Q:14
INFO 2019-06-05 21:33:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard from userinfo ui where (1=1   ) AND (ui.userid <> 'cww' ))
INFO 2019-06-05 21:33:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard from userinfo ui where (1=1   ) AND (ui.userid <> 'cww' ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:18:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]14:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard from userinfo ui where (1=1   ) AND (ui.userid <> 'cww' ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-06-05 21:33:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-06-05 21:33:20:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:18
INFO 2019-06-05 21:33:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-06-05 21:33:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:33:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='cww'
INFO 2019-06-05 21:33:20:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:22
INFO 2019-06-05 21:33:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:33:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:20:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:25:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>***CMD={check_func:"w_rule_deljianyan",check_data:[{name:"ru.ruleid",value:"563",type:"CHAR"}],proc0:"w_rule_delete",data0:[{name:"ru.ruleid",value:"563",type:"CHAR"},{name:"ru.carid",value:"鄂A00005",type:"CHAR"},{name:"userinfo.username",value:"曹威威",type:"CHAR"},{name:"userinfo.userid",value:"cww",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-06-05 21:33:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_deljianyan(?)}
参数列表	参数名: 值  --  类型
	ru.ruleid: 563 --  CHAR

INFO 2019-06-05 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 21
INFO 2019-06-05 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 21
INFO 2019-06-05 21:33:27:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:21
INFO 2019-06-05 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=24
INFO 2019-06-05 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=24 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=24 and userid='cww'
INFO 2019-06-05 21:33:27:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义Q:24
INFO 2019-06-05 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-06-05 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:27:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[5ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 23
INFO 2019-06-05 21:33:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 23
INFO 2019-06-05 21:33:32:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:23
INFO 2019-06-05 21:33:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=26
INFO 2019-06-05 21:33:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=26 order by ord
INFO 2019-06-05 21:33:32:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义F:26
INFO 2019-06-05 21:33:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-06-05 21:33:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:33:36:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[5ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:34:52:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-06-05 21:34:52:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:34:52:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='cww'
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义Q:2
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:34:52:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[6ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:35:54:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-06-05 21:35:54:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:35:54:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:2
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='cww'
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:2
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:35:54:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[9ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:35:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-06-05 21:35:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-06-05 21:35:55:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:18
INFO 2019-06-05 21:35:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-06-05 21:35:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:35:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='cww'
INFO 2019-06-05 21:35:55:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义Q:22
INFO 2019-06-05 21:35:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:35:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:35:55:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[7ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:35:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 21
INFO 2019-06-05 21:35:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 21
INFO 2019-06-05 21:35:56:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:21
INFO 2019-06-05 21:35:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=24
INFO 2019-06-05 21:35:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=24 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:35:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=24 and userid='cww'
INFO 2019-06-05 21:35:56:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:24
INFO 2019-06-05 21:35:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-06-05 21:35:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:35:56:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[8ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:35:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 23
INFO 2019-06-05 21:35:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 23
INFO 2019-06-05 21:35:57:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:23
INFO 2019-06-05 21:35:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=26
INFO 2019-06-05 21:35:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=26 order by ord
INFO 2019-06-05 21:35:57:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义F:26
INFO 2019-06-05 21:36:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-06-05 21:36:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:36:00:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[6ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:36:28:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-06-05 21:36:28:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:36:28:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义W:2
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='cww'
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:2
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[6ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:18
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='cww'
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:22
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:36:28:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:15
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义F:18
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_add_rule",params:[{name:"ru.carid",value:"",type:"CHAR"}]}
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]json处理完成。开始调用存储过程。w_add_rule
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_add_rule(?)}
参数列表	参数名: 值  --  类型
	ru.carid:  --  CHAR

ERROR2019-06-05 21:36:30:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_add_rule(?)} error.
ORA-01403: 未找到任何数据
ORA-06512: 在 "CAR.W_ADD_RULE", line 6
ORA-06512: 在 line 1

INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_sel_idcard",params:[{name:"c.userid",value:"",type:"CHAR"}]}
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[2ms]json处理完成。开始调用存储过程。w_sel_idcard
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_sel_idcard(?)}
参数列表	参数名: 值  --  类型
	c.userid:  --  CHAR

ERROR2019-06-05 21:36:30:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_sel_idcard(?)} error.
ORA-01403: 未找到任何数据
ORA-06512: 在 "CAR.W_SEL_IDCARD", line 6
ORA-06512: 在 line 1

INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_sel_idcard",params:[{name:"c.userid",value:"",type:"CHAR"}]}
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[1ms]json处理完成。开始调用存储过程。w_sel_idcard
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_sel_idcard(?)}
参数列表	参数名: 值  --  类型
	c.userid:  --  CHAR

ERROR2019-06-05 21:36:30:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_sel_idcard(?)} error.
ORA-01403: 未找到任何数据
ORA-06512: 在 "CAR.W_SEL_IDCARD", line 6
ORA-06512: 在 line 1

INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='05c8afc549000da5df5fe3fab15a1d29'
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select   detailsact key,detailsact value from ruledetails   where detailsact like '%%'
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]后台列表绑定完成。SQL:select   detailsact key,detailsact value from ruledetails   where detailsact like '%%'
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

ERROR2019-06-05 21:36:30:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-01403: 未找到任何数据
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 8
ORA-06512: 在 line 1

INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks_a",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"}]}
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]json处理完成。开始调用存储过程。w_rule_rulemarks_a
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks_a(?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER

INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[56ms]调用存储过程完成。w_add_rule
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_ruledebt_money",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.lasttime",value:"",type:"DATE"}]}
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]调用存储过程完成。w_rule_rulemarks_a
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]json处理完成。开始调用存储过程。w_ruledebt_money
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_ruledebt_money(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.lasttime:  --  DATE

INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[5ms]调用存储过程完成。w_ruledebt_money
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-06-05",type:"DATE"}]}
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks_a",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"}]}
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks_a
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-06-05 --  DATE

INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks_a(?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER

INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]调用存储过程完成。w_rule_rulemarks_a
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_ruledebt_money",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.lasttime",value:"",type:"DATE"}]}
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]json处理完成。开始调用存储过程。w_ruledebt_money
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_ruledebt_money(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.lasttime:  --  DATE

INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]调用存储过程完成。w_ruledebt_money
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[16ms]调用存储过程完成。w_rule_lasttime
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[64ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[138ms]调用存储过程完成。w_sel_idcard
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_sel_idcard",params:[{name:"c.userid",value:"",type:"CHAR"}]}
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]json处理完成。开始调用存储过程。w_sel_idcard
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_sel_idcard(?)}
参数列表	参数名: 值  --  类型
	c.userid:  --  CHAR

ERROR2019-06-05 21:36:30:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_sel_idcard(?)} error.
ORA-01403: 未找到任何数据
ORA-06512: 在 "CAR.W_SEL_IDCARD", line 6
ORA-06512: 在 line 1

INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks_a",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"}]}
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks_a
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks_a(?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER

INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]调用存储过程完成。w_rule_rulemarks_a
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_ruledebt_money",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.lasttime",value:"",type:"DATE"}]}
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]json处理完成。开始调用存储过程。w_ruledebt_money
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_ruledebt_money(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.lasttime:  --  DATE

INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]调用存储过程完成。w_ruledebt_money
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[198ms]调用存储过程完成。w_sel_idcard
INFO 2019-06-05 21:36:30:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[87ms]调用存储过程完成。w_sel_idcard
INFO 2019-06-05 21:36:32:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_add_rule",params:[{name:"ru.carid",value:"",type:"CHAR"}]}
INFO 2019-06-05 21:36:32:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[1ms]json处理完成。开始调用存储过程。w_add_rule
INFO 2019-06-05 21:36:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_add_rule(?)}
参数列表	参数名: 值  --  类型
	ru.carid:  --  CHAR

ERROR2019-06-05 21:36:32:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_add_rule(?)} error.
ORA-01403: 未找到任何数据
ORA-06512: 在 "CAR.W_ADD_RULE", line 6
ORA-06512: 在 line 1

INFO 2019-06-05 21:36:32:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_sel_idcard",params:[{name:"c.userid",value:"",type:"CHAR"}]}
INFO 2019-06-05 21:36:32:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[1ms]json处理完成。开始调用存储过程。w_sel_idcard
INFO 2019-06-05 21:36:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_sel_idcard(?)}
参数列表	参数名: 值  --  类型
	c.userid:  --  CHAR

ERROR2019-06-05 21:36:32:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_sel_idcard(?)} error.
ORA-01403: 未找到任何数据
ORA-06512: 在 "CAR.W_SEL_IDCARD", line 6
ORA-06512: 在 line 1

INFO 2019-06-05 21:36:32:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[43ms]调用存储过程完成。w_add_rule
INFO 2019-06-05 21:36:32:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]开始处理存储过程json。{name:"w_sel_idcard",params:[{name:"c.userid",value:"",type:"CHAR"}]}
INFO 2019-06-05 21:36:32:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[0ms]json处理完成。开始调用存储过程。w_sel_idcard
INFO 2019-06-05 21:36:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_sel_idcard(?)}
参数列表	参数名: 值  --  类型
	c.userid:  --  CHAR

ERROR2019-06-05 21:36:32:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_sel_idcard(?)} error.
ORA-01403: 未找到任何数据
ORA-06512: 在 "CAR.W_SEL_IDCARD", line 6
ORA-06512: 在 line 1

INFO 2019-06-05 21:36:32:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[68ms]调用存储过程完成。w_sel_idcard
INFO 2019-06-05 21:36:32:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[51ms]调用存储过程完成。w_sel_idcard
INFO 2019-06-05 21:36:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 12
INFO 2019-06-05 21:36:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 12
INFO 2019-06-05 21:36:34:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:12
INFO 2019-06-05 21:36:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=14
INFO 2019-06-05 21:36:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=14 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:36:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=14 and userid='cww'
INFO 2019-06-05 21:36:34:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义Q:14
INFO 2019-06-05 21:36:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard from userinfo ui where (1=1   ) AND (ui.userid <> 'cww' ))
INFO 2019-06-05 21:36:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard from userinfo ui where (1=1   ) AND (ui.userid <> 'cww' ) )  where rn between 1 and 20
INFO 2019-06-05 21:36:34:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[5ms]14:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard from userinfo ui where (1=1   ) AND (ui.userid <> 'cww' ) )  where rn between 1 and 20
INFO 2019-06-05 21:36:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:36:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:36:35:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 21
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 21
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:21
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=24
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=24 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=24 and userid='cww'
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义Q:24
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 23
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 23
INFO 2019-06-05 21:36:36:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:23
INFO 2019-06-05 21:36:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=26
INFO 2019-06-05 21:36:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=26 order by ord
INFO 2019-06-05 21:36:37:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义F:26
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:37:40:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-06-05 21:37:40:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:37:40:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:2
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='cww'
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:2
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:37:40:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:37:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-06-05 21:37:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-06-05 21:37:41:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:18
INFO 2019-06-05 21:37:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-06-05 21:37:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:37:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='cww'
INFO 2019-06-05 21:37:41:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[17ms]非JSON找到定义Q:22
INFO 2019-06-05 21:37:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:37:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:37:41:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[8ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:37:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 21
INFO 2019-06-05 21:37:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 21
INFO 2019-06-05 21:37:42:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:21
INFO 2019-06-05 21:37:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=24
INFO 2019-06-05 21:37:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=24 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:37:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=24 and userid='cww'
INFO 2019-06-05 21:37:42:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[16ms]非JSON找到定义Q:24
INFO 2019-06-05 21:37:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-06-05 21:37:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:37:42:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[5ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:37:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 23
INFO 2019-06-05 21:37:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 23
INFO 2019-06-05 21:37:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 23
INFO 2019-06-05 21:37:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 23
INFO 2019-06-05 21:37:44:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[1936ms]非JSON找到定义W:23
INFO 2019-06-05 21:37:44:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[357ms]非JSON找到定义W:23
INFO 2019-06-05 21:37:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=26
INFO 2019-06-05 21:37:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=26 order by ord
INFO 2019-06-05 21:37:44:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义F:26
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:38:09:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-06-05 21:38:09:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:38:09:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='cww'
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:2
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:38:09:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[6ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:18
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='cww'
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义Q:22
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 21
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 21
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:21
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=24
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=24 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=24 and userid='cww'
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:24
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:38:10:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:38:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 23
INFO 2019-06-05 21:38:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 23
INFO 2019-06-05 21:38:11:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:23
INFO 2019-06-05 21:38:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=26
INFO 2019-06-05 21:38:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=26 order by ord
INFO 2019-06-05 21:38:11:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义F:26
INFO 2019-06-05 21:38:24:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>***CMD={check_func:"escape",proc0:"w_details_insert",data0:[{name:"rt.detailsid",value:"",type:"NUMBER"},{name:"rt.detailsfine",value:"200",type:"NUMBER"},{name:"rt.detailsact",value:"ss",type:"CHAR"},{name:"userinfo.username",value:"曹威威",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-06-05 21:38:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_details_insert(?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	rt.detailsid:  --  NUMBER
	rt.detailsfine: 200 --  NUMBER
	rt.detailsact: ss --  CHAR
	userinfo.username: 曹威威 --  CHAR

INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:38:28:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-06-05 21:38:28:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:38:28:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:2
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='cww'
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:2
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:38:28:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[11ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:18
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='cww'
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:22
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 21
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 21
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:21
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=24
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=24 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=24 and userid='cww'
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:24
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:38:29:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:39:13:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-06-05 21:39:13:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:39:13:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:2
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='cww'
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义Q:2
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:18
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='cww'
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:22
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:13:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 21
INFO 2019-06-05 21:39:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 21
INFO 2019-06-05 21:39:14:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:21
INFO 2019-06-05 21:39:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=24
INFO 2019-06-05 21:39:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=24 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:39:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=24 and userid='cww'
INFO 2019-06-05 21:39:14:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义Q:24
INFO 2019-06-05 21:39:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-06-05 21:39:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:14:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 23
INFO 2019-06-05 21:39:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 23
INFO 2019-06-05 21:39:15:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:23
INFO 2019-06-05 21:39:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=26
INFO 2019-06-05 21:39:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=26 order by ord
INFO 2019-06-05 21:39:15:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义F:26
INFO 2019-06-05 21:39:20:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>***CMD={check_func:"escape",proc0:"w_details_insert",data0:[{name:"rt.detailsid",value:"",type:"NUMBER"},{name:"rt.detailsfine",value:"2",type:"NUMBER"},{name:"rt.detailsact",value:"dsd",type:"CHAR"},{name:"userinfo.username",value:"曹威威",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-06-05 21:39:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_details_insert(?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	rt.detailsid:  --  NUMBER
	rt.detailsfine: 2 --  NUMBER
	rt.detailsact: dsd --  CHAR
	userinfo.username: 曹威威 --  CHAR

INFO 2019-06-05 21:39:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-06-05 21:39:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:20:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[2ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:39:41:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-06-05 21:39:41:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:39:41:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:2
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='cww'
INFO 2019-06-05 21:39:41:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义Q:2
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[6ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:18
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='cww'
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[17ms]非JSON找到定义Q:22
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:42:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 21
INFO 2019-06-05 21:39:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 21
INFO 2019-06-05 21:39:43:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:21
INFO 2019-06-05 21:39:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=24
INFO 2019-06-05 21:39:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=24 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:39:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=24 and userid='cww'
INFO 2019-06-05 21:39:43:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义Q:24
INFO 2019-06-05 21:39:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-06-05 21:39:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:43:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 41
INFO 2019-06-05 21:39:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 41
INFO 2019-06-05 21:39:47:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:41
INFO 2019-06-05 21:39:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=42
INFO 2019-06-05 21:39:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=42 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:39:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=42 and userid='cww'
INFO 2019-06-05 21:39:47:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:42
INFO 2019-06-05 21:39:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴清','未缴纳') ))
INFO 2019-06-05 21:39:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴清','未缴纳') ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:47:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]42:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴清','未缴纳') ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 16
INFO 2019-06-05 21:39:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 16
INFO 2019-06-05 21:39:48:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:16
INFO 2019-06-05 21:39:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=20
INFO 2019-06-05 21:39:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=20 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:39:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=20 and userid='cww'
INFO 2019-06-05 21:39:48:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义Q:20
INFO 2019-06-05 21:39:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) AND (ul.userid = '曹威威' ))
INFO 2019-06-05 21:39:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) AND (ul.userid = '曹威威' ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:48:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) AND (ul.userid = '曹威威' ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 98
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  in (96,100,98)
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:98
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_CHART_DEF where FUNCNO=92
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义D:92
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='3bd40d00bdbada12139758961967e41e'
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[1ms]后台绑定sql数据完成。SQL:select count(*) count1 ,to_char(ruletime,'yyyy-MM-dd') ruletimev from  rule  group by  ruletime order by    ruletimev   desc
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_CHART_DEF where FUNCNO=90
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_CHART_DEF where FUNCNO=93
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[3ms]非JSON找到定义D:90
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[3ms]非JSON找到定义D:93
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='847bc41ca63640411595acba5c3a82b3'
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='22c272f4d1c7c408b4ba1d1cf445a1b6'
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[2ms]后台绑定sql数据完成。SQL:select sum(recepay) recemoney,to_char(paytime,'yyyy-MM-dd')  v_paytime from  rece  group by to_char(paytime,'yyyy-MM-dd')  order by v_paytime desc
INFO 2019-06-05 21:39:49:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[1ms]后台绑定sql数据完成。SQL:select sum(rulemarks) money,to_char(ruletime,'yyyy-MM-dd') time from rule group by  to_char(ruletime,'yyyy-MM-dd')  order by  time desc
INFO 2019-06-05 21:39:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) AND (ul.userid = '曹威威' ))
INFO 2019-06-05 21:39:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) AND (ul.userid = '曹威威' ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:50:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) AND (ul.userid = '曹威威' ) )  where rn between 1 and 20
INFO 2019-06-05 21:39:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='3bd40d00bdbada12139758961967e41e'
INFO 2019-06-05 21:39:57:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[2ms]后台绑定sql数据完成。SQL:select count(*) count1 ,to_char(ruletime,'yyyy-MM-dd') ruletimev from  rule  group by  ruletime order by    ruletimev   desc
INFO 2019-06-05 21:39:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='847bc41ca63640411595acba5c3a82b3'
INFO 2019-06-05 21:39:57:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[1ms]后台绑定sql数据完成。SQL:select sum(recepay) recemoney,to_char(paytime,'yyyy-MM-dd')  v_paytime from  rece  group by to_char(paytime,'yyyy-MM-dd')  order by v_paytime desc
INFO 2019-06-05 21:39:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='22c272f4d1c7c408b4ba1d1cf445a1b6'
INFO 2019-06-05 21:39:57:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[2ms]后台绑定sql数据完成。SQL:select sum(rulemarks) money,to_char(ruletime,'yyyy-MM-dd') time from rule group by  to_char(ruletime,'yyyy-MM-dd')  order by  time desc
INFO 2019-06-05 21:40:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) AND (ul.userid = '曹威威' ))
INFO 2019-06-05 21:40:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) AND (ul.userid = '曹威威' ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:28:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) AND (ul.userid = '曹威威' ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴清','未缴纳') ))
INFO 2019-06-05 21:40:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴清','未缴纳') ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:31:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[5ms]42:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴清','未缴纳') ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:33:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:40:33:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:33:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 12
INFO 2019-06-05 21:40:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 12
INFO 2019-06-05 21:40:34:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:12
INFO 2019-06-05 21:40:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=14
INFO 2019-06-05 21:40:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=14 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:40:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=14 and userid='cww'
INFO 2019-06-05 21:40:34:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:14
INFO 2019-06-05 21:40:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard from userinfo ui where (1=1   ) AND (ui.userid <> 'cww' ))
INFO 2019-06-05 21:40:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard from userinfo ui where (1=1   ) AND (ui.userid <> 'cww' ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:34:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[3ms]14:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard from userinfo ui where (1=1   ) AND (ui.userid <> 'cww' ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:40:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:35:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[6ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:40:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:35:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴清','未缴纳') ))
INFO 2019-06-05 21:40:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴清','未缴纳') ) )  where rn between 1 and 20
INFO 2019-06-05 21:40:36:
WFDEBUG>>*>>WF_CAR>>cww>>CA25DC125EF103AB35C852C27892B597>>[4ms]42:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴清','未缴纳') ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERID#值为：fxr
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERNAME#值为：费新日
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.SEX#值为：男
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.ADDRESS#值为：湖北阳新
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.MOBILEPHONE#值为：13566926393
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.IDCARD#值为：330781198509073990
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.AGE#值为：23
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERHEADFILE#值为：
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYEAR#值为：2019
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTMONTH#值为：06
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTDAY#值为：05
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYM#值为：201906
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYMD#值为：20190605
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-TODAY#值为：2019-06-05
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-BYEAR#值为：2019
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select count(*) from user_tables where table_name = 'WF_USERINFOEX'
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from WF_CAR.SYS_USERINFO where USERID='fxr'
INFO 2019-06-05 21:41:15:
fxr 登录成功---Wed Jun 05 21:41:15 CST 2019
INFO 2019-06-05 21:41:15:
WFDEBUG>>*>>*>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>fxr 登录成功---Wed Jun 05 21:41:15 CST 2019
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'fxr' order by ROLEID
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:41:17:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'fxr' order by ROLEID
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'fxr' order by ROLEID
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '1'
INFO 2019-06-05 21:41:17:
WFINFO>>角色1有0个角色行条件被加载
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('1')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:41:17:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('1') and rm.isdefault = 'Y'
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 34
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 34
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:34
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=36
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=36 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=36 and userid='fxr'
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[19ms]非JSON找到定义Q:36
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.age,ui.address,ui.mobilephone from userinfo ui where (1=1   ) AND (ui.userid = 'fxr' ))
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.age,ui.address,ui.mobilephone from userinfo ui where (1=1   ) AND (ui.userid = 'fxr' ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:17:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[6ms]36:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.age,ui.address,ui.mobilephone from userinfo ui where (1=1   ) AND (ui.userid = 'fxr' ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 68
INFO 2019-06-05 21:41:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 68
INFO 2019-06-05 21:41:19:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:68
INFO 2019-06-05 21:41:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=68
INFO 2019-06-05 21:41:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=68 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:41:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=68 and userid='fxr'
INFO 2019-06-05 21:41:19:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义Q:68
INFO 2019-06-05 21:41:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.registime,c.carid,c.carstatus,c.cardes from car c where (c.carstatus IN ('待审核' ,'审核未通过') ))
INFO 2019-06-05 21:41:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.registime,c.carid,c.carstatus,c.cardes from car c where (c.carstatus IN ('待审核' ,'审核未通过') ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:19:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[4ms]68:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.registime,c.carid,c.carstatus,c.cardes from car c where (c.carstatus IN ('待审核' ,'审核未通过') ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 50
INFO 2019-06-05 21:41:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 50
INFO 2019-06-05 21:41:21:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:50
INFO 2019-06-05 21:41:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=51
INFO 2019-06-05 21:41:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=51 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:41:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=51 and userid='fxr'
INFO 2019-06-05 21:41:21:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义Q:51
INFO 2019-06-05 21:41:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,ui.username,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c,userinfo ui where (c.userid = 'fxr' ) AND (c.carstatus = '已审核' ) AND (ui.userid = 'fxr' ))
INFO 2019-06-05 21:41:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,ui.username,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c,userinfo ui where (c.userid = 'fxr' ) AND (c.carstatus = '已审核' ) AND (ui.userid = 'fxr' ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:21:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[5ms]51:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,ui.username,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c,userinfo ui where (c.userid = 'fxr' ) AND (c.carstatus = '已审核' ) AND (ui.userid = 'fxr' ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:23:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,ui.username,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c,userinfo ui where (c.userid = 'fxr' ) AND (c.carstatus = '已审核' ) AND (ui.userid = 'fxr' ))
INFO 2019-06-05 21:41:23:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,ui.username,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c,userinfo ui where (c.userid = 'fxr' ) AND (c.carstatus = '已审核' ) AND (ui.userid = 'fxr' ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:23:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[3ms]51:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,ui.username,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c,userinfo ui where (c.userid = 'fxr' ) AND (c.carstatus = '已审核' ) AND (ui.userid = 'fxr' ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:23:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.age,ui.address,ui.mobilephone from userinfo ui where (1=1   ) AND (ui.userid = 'fxr' ))
INFO 2019-06-05 21:41:23:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.age,ui.address,ui.mobilephone from userinfo ui where (1=1   ) AND (ui.userid = 'fxr' ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:23:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[4ms]36:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.age,ui.address,ui.mobilephone from userinfo ui where (1=1   ) AND (ui.userid = 'fxr' ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 78
INFO 2019-06-05 21:41:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 78
INFO 2019-06-05 21:41:25:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义W:78
INFO 2019-06-05 21:41:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=77
INFO 2019-06-05 21:41:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=77 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:41:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=77 and userid='fxr'
INFO 2019-06-05 21:41:25:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义Q:77
INFO 2019-06-05 21:41:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:41:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:25:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[8ms]77:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 87
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 87
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:87
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=84
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=84 order by ord
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义F:84
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='edb23ad86e02e91e7e97c03d3eb9941a'
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[1ms]后台绑定sql数据完成。SQL:select     '562'  ruleid,'鄂A00005'  carid,'无证驾驶' rulevio,'2019-06-20' lasttime,'400' rulemoney,'未缴清' rulestatus, '2019-06-05'   ruletime , '100'  rulemarks from dual
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[0ms]开始处理存储过程json。{name:"w_putong_rule",params:[{name:"MultiRows",value:"563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&995;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100",type:"CHAR"},{name:"MultiCount",value:"2",type:"NUMBER"}]}
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[1ms]json处理完成。开始调用存储过程。w_putong_rule
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_putong_rule(?,?)}
参数列表	参数名: 值  --  类型
	MultiRows: 563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&995;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100 --  CHAR
	MultiCount: 2 --  NUMBER

INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[5ms]调用存储过程完成。w_putong_rule
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[0ms]开始处理存储过程json。{name:"w_putong_zhinajin",params:[{name:"MultiRows",value:"563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&995;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100",type:"CHAR"},{name:"MultiCount",value:"2",type:"NUMBER"}]}
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[2ms]json处理完成。开始调用存储过程。w_putong_zhinajin
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_putong_zhinajin(?,?)}
参数列表	参数名: 值  --  类型
	MultiRows: 563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&995;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100 --  CHAR
	MultiCount: 2 --  NUMBER

INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[0ms]开始处理存储过程json。{name:"w_rule_allmoney_1_1",params:[{name:"MultiRows",value:"563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&995;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100",type:"CHAR"},{name:"MultiCount",value:"2",type:"NUMBER"}]}
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[2ms]json处理完成。开始调用存储过程。w_rule_allmoney_1_1
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_allmoney_1_1(?,?)}
参数列表	参数名: 值  --  类型
	MultiRows: 563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&995;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100 --  CHAR
	MultiCount: 2 --  NUMBER

INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[7ms]调用存储过程完成。w_putong_zhinajin
INFO 2019-06-05 21:41:36:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[6ms]调用存储过程完成。w_rule_allmoney_1_1
INFO 2019-06-05 21:41:40:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>***CMD={check_func:"w_putong_jianyan",check_data:[{name:"ru.ruleid",value:"562",type:"CHAR"},{name:"ru.getmoney",value:"1",type:"NUMBER"},{name:"MultiRows",value:"563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&995;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100",type:"CHAR"},{name:"MultiCount",value:"2",type:"NUMBER"}],proc0:"w_putong_jiaokuan",data0:[{name:"ru.getmoney",value:"1",type:"NUMBER"},{name:"ru.carid",value:"鄂A00005",type:"CHAR"},{name:"MultiRows",value:"563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&995;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100",type:"CHAR"},{name:"MultiCount",value:"2",type:"NUMBER"},{name:"userinfo.username",value:"费新日",type:"CHAR"},{name:"userinfo.userid",value:"fxr",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-06-05 21:41:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_putong_jianyan(?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.ruleid: 562 --  CHAR
	ru.getmoney: 1 --  NUMBER
	MultiRows: 563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&995;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100 --  CHAR
	MultiCount: 2 --  NUMBER

INFO 2019-06-05 21:41:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_putong_jiaokuan(?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.getmoney: 1 --  NUMBER
	ru.carid: 鄂A00005 --  CHAR
	MultiRows: 563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&995;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100 --  CHAR
	MultiCount: 2 --  NUMBER
	userinfo.username: 费新日 --  CHAR
	userinfo.userid: fxr --  CHAR

INFO 2019-06-05 21:41:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:41:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:40:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[4ms]77:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 122
INFO 2019-06-05 21:41:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 122
INFO 2019-06-05 21:41:43:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:122
INFO 2019-06-05 21:41:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=112
INFO 2019-06-05 21:41:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=112 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:41:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=112 and userid='fxr'
INFO 2019-06-05 21:41:43:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义Q:112
INFO 2019-06-05 21:41:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select re.receid,re.recepay,re.paytime,re.userid,re.remoney from rece re where (1=1   ) AND (re.userid = '费新日' ))
INFO 2019-06-05 21:41:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by re.paytime DESC ) rn,re.receid,re.recepay,re.paytime,re.userid,re.remoney from rece re where (1=1   ) AND (re.userid = '费新日' ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:43:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[10ms]112:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by re.paytime DESC ) rn,re.receid,re.recepay,re.paytime,re.userid,re.remoney from rece re where (1=1   ) AND (re.userid = '费新日' ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 118
INFO 2019-06-05 21:41:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 118
INFO 2019-06-05 21:41:45:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:118
INFO 2019-06-05 21:41:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=108
INFO 2019-06-05 21:41:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=108 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:41:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=108 and userid='fxr'
INFO 2019-06-05 21:41:45:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[14ms]非JSON找到定义Q:108
INFO 2019-06-05 21:41:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rr.receid,rr.ruleid,rr.carid,rr.userid,rr.username,rr.paytime,rr.recepay from rule_rece rr where (1=1   ) AND (rr.receid = '201906054906' ))
INFO 2019-06-05 21:41:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>String 201906054906
INFO 2019-06-05 21:41:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rr.paytime DESC ) rn,rr.receid,rr.ruleid,rr.carid,rr.userid,rr.username,rr.paytime,rr.recepay from rule_rece rr where (1=1   ) AND (rr.receid = '201906054906' ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>String 201906054906
INFO 2019-06-05 21:41:45:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[15ms]108:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rr.paytime DESC ) rn,rr.receid,rr.ruleid,rr.carid,rr.userid,rr.username,rr.paytime,rr.recepay from rule_rece rr where (1=1   ) AND (rr.receid = ? ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 119
INFO 2019-06-05 21:41:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 119
INFO 2019-06-05 21:41:49:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:119
INFO 2019-06-05 21:41:49:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义P:109
INFO 2019-06-05 21:41:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rr.receid,rr.ruleid,rr.carid,rr.userid,rr.username,rr.paytime,rr.recepay from rule_rece rr where (1=1   ) AND (rr.receid = '201906054906' ))
INFO 2019-06-05 21:41:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>String 201906054906
INFO 2019-06-05 21:41:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rr.paytime DESC ) rn,rr.receid,rr.ruleid,rr.carid,rr.userid,rr.username,rr.paytime,rr.recepay from rule_rece rr where (1=1   ) AND (rr.receid = '201906054906' ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>String 201906054906
INFO 2019-06-05 21:41:53:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[5ms]108:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rr.paytime DESC ) rn,rr.receid,rr.ruleid,rr.carid,rr.userid,rr.username,rr.paytime,rr.recepay from rule_rece rr where (1=1   ) AND (rr.receid = ? ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:41:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:54:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[5ms]77:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='edb23ad86e02e91e7e97c03d3eb9941a'
INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[1ms]后台绑定sql数据完成。SQL:select     '562'  ruleid,'鄂A00005'  carid,'无证驾驶' rulevio,'2019-06-20' lasttime,'400' rulemoney,'未缴清' rulestatus, '2019-06-05'   ruletime , '100'  rulemarks from dual
INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[0ms]开始处理存储过程json。{name:"w_putong_rule",params:[{name:"MultiRows",value:"563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&994;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100",type:"CHAR"},{name:"MultiCount",value:"2",type:"NUMBER"}]}
INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[1ms]json处理完成。开始调用存储过程。w_putong_rule
INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_putong_rule(?,?)}
参数列表	参数名: 值  --  类型
	MultiRows: 563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&994;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100 --  CHAR
	MultiCount: 2 --  NUMBER

INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[2ms]调用存储过程完成。w_putong_rule
INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[0ms]开始处理存储过程json。{name:"w_putong_zhinajin",params:[{name:"MultiRows",value:"563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&994;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100",type:"CHAR"},{name:"MultiCount",value:"2",type:"NUMBER"}]}
INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[1ms]json处理完成。开始调用存储过程。w_putong_zhinajin
INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_putong_zhinajin(?,?)}
参数列表	参数名: 值  --  类型
	MultiRows: 563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&994;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100 --  CHAR
	MultiCount: 2 --  NUMBER

INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[3ms]调用存储过程完成。w_putong_zhinajin
INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[0ms]开始处理存储过程json。{name:"w_rule_allmoney_1_1",params:[{name:"MultiRows",value:"563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&994;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100",type:"CHAR"},{name:"MultiCount",value:"2",type:"NUMBER"}]}
INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[1ms]json处理完成。开始调用存储过程。w_rule_allmoney_1_1
INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_allmoney_1_1(?,?)}
参数列表	参数名: 值  --  类型
	MultiRows: 563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&994;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100 --  CHAR
	MultiCount: 2 --  NUMBER

INFO 2019-06-05 21:41:58:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[3ms]调用存储过程完成。w_rule_allmoney_1_1
INFO 2019-06-05 21:42:06:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>***CMD={check_func:"w_putong_jianyan",check_data:[{name:"ru.ruleid",value:"562",type:"CHAR"},{name:"ru.getmoney",value:"1095",type:"NUMBER"},{name:"MultiRows",value:"563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&994;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100",type:"CHAR"},{name:"MultiCount",value:"2",type:"NUMBER"}],proc0:"w_putong_jiaokuan",data0:[{name:"ru.getmoney",value:"1095",type:"NUMBER"},{name:"ru.carid",value:"鄂A00005",type:"CHAR"},{name:"MultiRows",value:"563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&994;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100",type:"CHAR"},{name:"MultiCount",value:"2",type:"NUMBER"},{name:"userinfo.username",value:"费新日",type:"CHAR"},{name:"userinfo.userid",value:"fxr",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-06-05 21:42:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_putong_jianyan(?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.ruleid: 562 --  CHAR
	ru.getmoney: 1095 --  NUMBER
	MultiRows: 563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&994;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100 --  CHAR
	MultiCount: 2 --  NUMBER

INFO 2019-06-05 21:42:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_putong_jiaokuan(?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.getmoney: 1095 --  NUMBER
	ru.carid: 鄂A00005 --  CHAR
	MultiRows: 563&鄂A00005&肇事逃逸&2019-06-03&1000&2019-06-18&未缴清&994;562&鄂A00005&无证驾驶&2019-06-05&400&2019-06-20&未缴清&100 --  CHAR
	MultiCount: 2 --  NUMBER
	userinfo.username: 费新日 --  CHAR
	userinfo.userid: fxr --  CHAR

INFO 2019-06-05 21:42:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:42:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:42:06:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[4ms]77:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:42:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select re.receid,re.recepay,re.paytime,re.userid,re.remoney from rece re where (1=1   ) AND (re.userid = '费新日' ))
INFO 2019-06-05 21:42:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by re.paytime DESC ) rn,re.receid,re.recepay,re.paytime,re.userid,re.remoney from rece re where (1=1   ) AND (re.userid = '费新日' ) )  where rn between 1 and 20
INFO 2019-06-05 21:42:08:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[6ms]112:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by re.paytime DESC ) rn,re.receid,re.recepay,re.paytime,re.userid,re.remoney from rece re where (1=1   ) AND (re.userid = '费新日' ) )  where rn between 1 and 20
INFO 2019-06-05 21:42:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rr.receid,rr.ruleid,rr.carid,rr.userid,rr.username,rr.paytime,rr.recepay from rule_rece rr where (1=1   ) AND (rr.receid = '201906055042' ))
INFO 2019-06-05 21:42:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>String 201906055042
INFO 2019-06-05 21:42:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rr.paytime DESC ) rn,rr.receid,rr.ruleid,rr.carid,rr.userid,rr.username,rr.paytime,rr.recepay from rule_rece rr where (1=1   ) AND (rr.receid = '201906055042' ) )  where rn between 1 and 20
INFO 2019-06-05 21:42:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>String 201906055042
INFO 2019-06-05 21:42:10:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[4ms]108:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rr.paytime DESC ) rn,rr.receid,rr.ruleid,rr.carid,rr.userid,rr.username,rr.paytime,rr.recepay from rule_rece rr where (1=1   ) AND (rr.receid = ? ) )  where rn between 1 and 20
INFO 2019-06-05 21:46:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:46:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:46:30:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[3ms]77:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:46:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:46:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:46:32:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[3ms]77:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:46:33:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.idcard,ui.sex,ui.age,ui.address,ui.mobilephone from userinfo ui where (1=1   ) AND (ui.userid = 'fxr' ))
INFO 2019-06-05 21:46:33:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.age,ui.address,ui.mobilephone from userinfo ui where (1=1   ) AND (ui.userid = 'fxr' ) )  where rn between 1 and 20
INFO 2019-06-05 21:46:33:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[4ms]36:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.idcard,ui.sex,ui.age,ui.address,ui.mobilephone from userinfo ui where (1=1   ) AND (ui.userid = 'fxr' ) )  where rn between 1 and 20
INFO 2019-06-05 21:46:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:46:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:46:34:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[6ms]77:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.carid IN (select carid from car where userid ='fxr') ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:46:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select re.receid,re.recepay,re.paytime,re.userid,re.remoney from rece re where (1=1   ) AND (re.userid = '费新日' ))
INFO 2019-06-05 21:46:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by re.paytime DESC ) rn,re.receid,re.recepay,re.paytime,re.userid,re.remoney from rece re where (1=1   ) AND (re.userid = '费新日' ) )  where rn between 1 and 20
INFO 2019-06-05 21:46:44:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[5ms]112:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by re.paytime DESC ) rn,re.receid,re.recepay,re.paytime,re.userid,re.remoney from rece re where (1=1   ) AND (re.userid = '费新日' ) )  where rn between 1 and 20
INFO 2019-06-05 21:46:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rr.receid,rr.ruleid,rr.carid,rr.userid,rr.username,rr.paytime,rr.recepay from rule_rece rr where (1=1   ) AND (rr.receid = '201906055042' ))
INFO 2019-06-05 21:46:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>String 201906055042
INFO 2019-06-05 21:46:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rr.paytime DESC ) rn,rr.receid,rr.ruleid,rr.carid,rr.userid,rr.username,rr.paytime,rr.recepay from rule_rece rr where (1=1   ) AND (rr.receid = '201906055042' ) )  where rn between 1 and 20
INFO 2019-06-05 21:46:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>String 201906055042
INFO 2019-06-05 21:46:46:
WFDEBUG>>*>>WF_CAR>>fxr>>67E9BDF19F40CF2AF8F86A7FA5C10848>>[8ms]108:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rr.paytime DESC ) rn,rr.receid,rr.ruleid,rr.carid,rr.userid,rr.username,rr.paytime,rr.recepay from rule_rece rr where (1=1   ) AND (rr.receid = ? ) )  where rn between 1 and 20
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERID#值为：cww
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERNAME#值为：曹威威
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.SEX#值为：男
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.ADDRESS#值为：湖北大冶
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.MOBILEPHONE#值为：13566942232
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.IDCARD#值为：330781198509076593
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.AGE#值为：23
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERHEADFILE#值为：
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYEAR#值为：2019
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTMONTH#值为：06
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTDAY#值为：05
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYM#值为：201906
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYMD#值为：20190605
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-TODAY#值为：2019-06-05
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-BYEAR#值为：2019
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select count(*) from user_tables where table_name = 'WF_USERINFOEX'
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from WF_CAR.SYS_USERINFO where USERID='cww'
INFO 2019-06-05 21:49:03:
cww 登录成功---Wed Jun 05 21:49:03 CST 2019
INFO 2019-06-05 21:49:03:
WFDEBUG>>*>>*>>cww>>E18EB533E0C80C3422E13AF6A47BC9A5>>cww 登录成功---Wed Jun 05 21:49:03 CST 2019
INFO 2019-06-05 21:49:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:49:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:49:05:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:49:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:49:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'cww' order by ROLEID
INFO 2019-06-05 21:49:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-06-05 21:49:05:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-06-05 21:49:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-06-05 21:49:05:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-06-05 21:49:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-06-05 21:49:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-06-05 21:49:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-06-05 21:49:05:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-06-05 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-06-05 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='cww'
INFO 2019-06-05 21:49:06:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:2
INFO 2019-06-05 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ))
INFO 2019-06-05 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:49:06:
WFDEBUG>>*>>WF_CAR>>cww>>E18EB533E0C80C3422E13AF6A47BC9A5>>[8ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by c.registime DESC ) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) AND (c.carstatus = '已审核' ) )  where rn between 1 and 20
INFO 2019-06-05 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 41
INFO 2019-06-05 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 41
INFO 2019-06-05 21:49:07:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:41
INFO 2019-06-05 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=42
INFO 2019-06-05 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=42 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=42 and userid='cww'
INFO 2019-06-05 21:49:07:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:42
INFO 2019-06-05 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴清','未缴纳') ))
INFO 2019-06-05 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴清','未缴纳') ) )  where rn between 1 and 20
INFO 2019-06-05 21:49:07:
WFDEBUG>>*>>WF_CAR>>cww>>E18EB533E0C80C3422E13AF6A47BC9A5>>[3ms]42:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.rulemoney,ru.lasttime,ru.rulestatus,ru.rulemarks from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴清','未缴纳') ) )  where rn between 1 and 20
INFO 2019-06-05 21:49:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-06-05 21:49:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-06-05 21:49:35:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:18
INFO 2019-06-05 21:49:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-06-05 21:49:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:49:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='cww'
INFO 2019-06-05 21:49:35:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:22
INFO 2019-06-05 21:49:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ))
INFO 2019-06-05 21:49:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:49:35:
WFDEBUG>>*>>WF_CAR>>cww>>E18EB533E0C80C3422E13AF6A47BC9A5>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.rulevio,ru.ruletime,ru.lasttime,ru.rulemoney,ru.rulestatus from rule ru where (1=1   ) AND (ru.rulestatus IN ('未缴纳','未缴清') ) )  where rn between 1 and 20
INFO 2019-06-05 21:49:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 21
INFO 2019-06-05 21:49:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 21
INFO 2019-06-05 21:49:36:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[245ms]非JSON找到定义W:21
INFO 2019-06-05 21:49:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=24
INFO 2019-06-05 21:49:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=24 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:49:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=24 and userid='cww'
INFO 2019-06-05 21:49:36:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义Q:24
INFO 2019-06-05 21:49:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-06-05 21:49:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:49:36:
WFDEBUG>>*>>WF_CAR>>cww>>E18EB533E0C80C3422E13AF6A47BC9A5>>[4ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailsid,rt.detailsact,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-06-05 21:51:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 16
INFO 2019-06-05 21:51:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 16
INFO 2019-06-05 21:51:53:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:16
INFO 2019-06-05 21:51:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=20
INFO 2019-06-05 21:51:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=20 and FIELDNAME <> '***' order by ord
INFO 2019-06-05 21:51:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=20 and userid='cww'
INFO 2019-06-05 21:51:53:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:20
INFO 2019-06-05 21:51:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) AND (ul.userid = '曹威威' ))
INFO 2019-06-05 21:51:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) AND (ul.userid = '曹威威' ) )  where rn between 1 and 20
INFO 2019-06-05 21:51:53:
WFDEBUG>>*>>WF_CAR>>cww>>E18EB533E0C80C3422E13AF6A47BC9A5>>[6ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) AND (ul.userid = '曹威威' ) )  where rn between 1 and 20
