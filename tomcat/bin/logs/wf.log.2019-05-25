INFO 2019-05-25 19:37:38:
Parsing configuration file [struts-default.xml]
INFO 2019-05-25 19:37:38:
Parsing configuration file [struts-plugin.xml]
INFO 2019-05-25 19:37:38:
Parsing configuration file [struts.xml]
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.ObjectFactory)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ActionFactory)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ResultFactory)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ConverterFactory)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.InterceptorFactory)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ValidatorFactory)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.UnknownHandlerFactory)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.FileManagerFactory)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.XWorkConverter)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.CollectionConverter)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.ArrayConverter)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.DateConverter)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.NumberConverter)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.StringConverter)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ConversionPropertiesProcessor)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ConversionFileProcessor)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ConversionAnnotationProcessor)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.TypeConverterCreator)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.TypeConverterHolder)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.TextProvider)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.LocaleProvider)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.ActionProxyFactory)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ObjectTypeDeterminer)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (org.apache.struts2.dispatcher.mapper.ActionMapper)
INFO 2019-05-25 19:37:38:
Choosing bean (jakarta) for (org.apache.struts2.dispatcher.multipart.MultiPartRequest)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (org.apache.struts2.views.freemarker.FreemarkerManager)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (org.apache.struts2.components.UrlRenderer)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.validator.ActionValidatorManager)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.util.ValueStackFactory)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.util.reflection.ReflectionProvider)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.util.reflection.ReflectionContextFactory)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.util.PatternMatcher)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (org.apache.struts2.util.ContentTypeMatcher)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (org.apache.struts2.dispatcher.StaticContentLoader)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.UnknownHandlerManager)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (org.apache.struts2.views.util.UrlHelper)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.util.TextParser)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (org.apache.struts2.dispatcher.DispatcherErrorHandler)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.security.ExcludedPatternsChecker)
INFO 2019-05-25 19:37:38:
Choosing bean (struts) for (com.opensymphony.xwork2.security.AcceptedPatternsChecker)
INFO 2019-05-25 19:37:38:
系统初始化中...v4.20170616B
INFO 2019-05-25 19:37:39:
项目ID:WF_CAR---项目名称:car---启动模式:local
INFO 2019-05-25 19:37:39:
配置库  wf_tianyi链接池创建成功!
INFO 2019-05-25 19:37:39:
业务库CAR链接池创建成功!
INFO 2019-05-25 19:37:39:
ftpz FTP服务器 127.0.0.1:21 配置完毕.
INFO 2019-05-25 19:37:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_CUSTOM_DEF where FUNCNO=0
INFO 2019-05-25 19:37:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_CUSTOM_DETAIL where FUNCNO=0
INFO 2019-05-25 19:37:39:
本系统未定义初始化环境变量.
INFO 2019-05-25 19:37:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select wm_concat(distinct trim(func_type)) from WF_CAR.sys_window_def
INFO 2019-05-25 19:37:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select wm_concat(distinct trim(inputtype)) from WF_CAR.sys_form_detail
INFO 2019-05-25 19:37:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select count(*) from WF_CAR.sys_query_detail where chart_col is not null and chart_col<>'none'
INFO 2019-05-25 19:37:39:
WFINFO>>窗口类型(db)：[{"type":"F","detail":"date,select,text,uploadfile"},{"type":"Q","detail":""}]
INFO 2019-05-25 19:37:39:
系统启动成功！ 
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERID#值为：ws
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERNAME#值为：ws
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.SEX#值为：男
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.ADDRESS#值为：湖北黄冈
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.MOBILEPHONE#值为：139959766290
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.AGE#值为：23
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYEAR#值为：2019
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTMONTH#值为：05
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTDAY#值为：25
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYM#值为：201905
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYMD#值为：20190525
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-TODAY#值为：2019-05-25
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-BYEAR#值为：2019
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select count(*) from user_tables where table_name = 'WF_USERINFOEX'
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from WF_CAR.SYS_USERINFO where USERID='ws'
INFO 2019-05-25 19:47:09:
ws 登录成功---Sat May 25 19:47:09 CST 2019
INFO 2019-05-25 19:47:09:
WFDEBUG>>*>>*>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>ws 登录成功---Sat May 25 19:47:09 CST 2019
INFO 2019-05-25 19:47:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 19:47:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 19:47:11:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 19:47:12:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 19:47:12:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:2
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[23ms]非JSON找到定义Q:2
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 19:47:12:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[10ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 19:47:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 6
INFO 2019-05-25 19:47:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 6
INFO 2019-05-25 19:47:14:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义W:6
INFO 2019-05-25 19:47:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=8
INFO 2019-05-25 19:47:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=8 order by ord
INFO 2019-05-25 19:47:14:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[14ms]非JSON找到定义F:8
INFO 2019-05-25 19:47:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='74cdd9b4bde78e9856bdf84e3c53354d'
INFO 2019-05-25 19:47:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select userid key,userid from userinfo
INFO 2019-05-25 19:47:14:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]后台列表绑定完成。SQL:select userid key,userid from userinfo
INFO 2019-05-25 19:47:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 19:47:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 19:47:25:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义W:18
INFO 2019-05-25 19:47:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 19:47:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 19:47:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 19:47:25:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[18ms]非JSON找到定义Q:22
INFO 2019-05-25 19:47:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 19:47:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 19:47:25:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[15ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义W:15
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义F:18
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='05c8afc549000da5df5fe3fab15a1d29'
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select  detailsid key,detailsact from ruledetails
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]后台列表绑定完成。SQL:select  detailsid key,detailsact from ruledetails
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]开始处理存储过程json。{name:"w_car_update",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"}]}
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[57ms]json处理完成。开始调用存储过程。w_car_update
INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_car_update(?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER

INFO 2019-05-25 19:47:38:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[22ms]调用存储过程完成。w_car_update
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 19:52:39:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 19:52:39:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 19:52:39:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:2
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:2
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 19:52:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[8ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 19:52:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 19:52:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 19:52:45:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 19:52:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 19:52:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 19:52:46:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:18
INFO 2019-05-25 19:52:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 19:52:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 19:52:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 19:52:46:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:22
INFO 2019-05-25 19:52:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 19:52:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 19:52:46:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 19:52:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 19:52:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 19:52:47:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:15
INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义F:18
INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='05c8afc549000da5df5fe3fab15a1d29'
INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select  detailsid key,detailsact from ruledetails
INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]后台列表绑定完成。SQL:select  detailsid key,detailsact from ruledetails
INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_car_update",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"}]}
INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_car_update
INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_car_update(?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER

INFO 2019-05-25 19:52:48:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]调用存储过程完成。w_car_update
INFO 2019-05-25 19:53:08:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>***CMD={check_func:"w_insert_rule",check_data:[{name:"ru.ruletime",value:"2019-05-26",type:"DATE"}],proc0:"rule_insert",data0:[{name:"ru.rulevio",value:"1",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-26",type:"DATE"},{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.rulemarks",value:"0",type:"NUMBER"},{name:"ru.ruleid",value:"lc111",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-05-31",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 19:53:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_insert_rule(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-26 --  DATE

INFO 2019-05-25 19:53:12:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>***CMD={check_func:"w_insert_rule",check_data:[{name:"ru.ruletime",value:"2019-05-26",type:"DATE"}],proc0:"rule_insert",data0:[{name:"ru.rulevio",value:"1",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-26",type:"DATE"},{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.rulemarks",value:"0",type:"NUMBER"},{name:"ru.ruleid",value:"lc111",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-05-31",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 19:53:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_insert_rule(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-26 --  DATE

INFO 2019-05-25 19:53:17:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>***CMD={check_func:"w_insert_rule",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"rule_insert",data0:[{name:"ru.rulevio",value:"1",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.rulemarks",value:"0",type:"NUMBER"},{name:"ru.ruleid",value:"lc111",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-05-31",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 19:53:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_insert_rule(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

INFO 2019-05-25 19:53:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call rule_insert(?,?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR
	ru.ruletime: 2019-05-24 --  DATE
	ru.rulemoney: 800 --  NUMBER
	ru.rulemarks: 0 --  NUMBER
	ru.ruleid: lc111 --  CHAR
	ru.ruledebt: 0 --  NUMBER
	ru.lasttime: 2019-05-31 --  DATE
	ru.carid: sw --  CHAR
	userinfo.userid: ws --  CHAR

INFO 2019-05-25 19:53:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 19:53:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 19:53:17:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:01:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 20:01:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 20:01:19:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 20:01:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='05c8afc549000da5df5fe3fab15a1d29'
INFO 2019-05-25 20:01:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select  detailsid key,detailsact from ruledetails
INFO 2019-05-25 20:01:19:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台列表绑定完成。SQL:select  detailsid key,detailsact from ruledetails
INFO 2019-05-25 20:01:19:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_car_update",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"}]}
INFO 2019-05-25 20:01:19:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]json处理完成。开始调用存储过程。w_car_update
INFO 2019-05-25 20:01:19:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_car_update(?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER

INFO 2019-05-25 20:01:19:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]调用存储过程完成。w_car_update
INFO 2019-05-25 20:09:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:09:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:09:13:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:09:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:09:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:09:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 20:09:13:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 20:09:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:09:13:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:09:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 20:09:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 20:09:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 20:09:13:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:2
INFO 2019-05-25 20:09:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 20:09:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:09:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 20:09:14:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:2
INFO 2019-05-25 20:09:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 20:09:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:09:14:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:09:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[1571ms]非JSON找到定义W:18
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:18
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[14ms]非JSON找到定义Q:22
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:22
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:09:16:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:15
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义F:18
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='05c8afc549000da5df5fe3fab15a1d29'
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select  detailsid key,detailsact from ruledetails
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]后台列表绑定完成。SQL:select  detailsid key,detailsact from ruledetails
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

ERROR2019-05-25 20:09:18:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-06503: PL/SQL: 函数未返回值
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 12
ORA-06512: 在 line 1

INFO 2019-05-25 20:09:18:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[38ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:09:20:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 20:09:20:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:09:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

ERROR2019-05-25 20:09:20:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-06503: PL/SQL: 函数未返回值
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 12
ORA-06512: 在 line 1

INFO 2019-05-25 20:09:20:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[49ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:09:23:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:09:23:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:09:23:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

ERROR2019-05-25 20:09:23:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-06503: PL/SQL: 函数未返回值
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 12
ORA-06512: 在 line 1

INFO 2019-05-25 20:09:23:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[57ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:09:24:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 20:09:24:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:09:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

ERROR2019-05-25 20:09:24:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-06503: PL/SQL: 函数未返回值
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 12
ORA-06512: 在 line 1

INFO 2019-05-25 20:09:24:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[51ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:11:06:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 20:11:06:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:11:06:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:2
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:11:06:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:11:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 20:11:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 20:11:08:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:18
INFO 2019-05-25 20:11:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 20:11:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:11:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 20:11:08:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:22
INFO 2019-05-25 20:11:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:11:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:11:08:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:11:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:11:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:11:08:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:15
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义F:18
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='05c8afc549000da5df5fe3fab15a1d29'
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select  detailsid key,detailsact from ruledetails
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台列表绑定完成。SQL:select  detailsid key,detailsact from ruledetails
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

ERROR2019-05-25 20:11:10:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-06503: PL/SQL: 函数未返回值
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 12
ORA-06512: 在 line 1

INFO 2019-05-25 20:11:10:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[39ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:11:12:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 20:11:12:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:11:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

ERROR2019-05-25 20:11:12:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-06503: PL/SQL: 函数未返回值
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 12
ORA-06512: 在 line 1

INFO 2019-05-25 20:11:12:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[41ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:12:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:12:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:12:20:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:12:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:12:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:12:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 20:12:20:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 20:12:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:12:20:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:12:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 20:12:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 20:12:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 20:12:21:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:2
INFO 2019-05-25 20:12:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 20:12:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:12:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 20:12:21:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:2
INFO 2019-05-25 20:12:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 20:12:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:12:21:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:12:47:
Parsing configuration file [struts-default.xml]
INFO 2019-05-25 20:12:47:
Parsing configuration file [struts-plugin.xml]
INFO 2019-05-25 20:12:47:
Parsing configuration file [struts.xml]
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.ObjectFactory)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ActionFactory)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ResultFactory)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ConverterFactory)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.InterceptorFactory)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ValidatorFactory)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.UnknownHandlerFactory)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.FileManagerFactory)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.XWorkConverter)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.CollectionConverter)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.ArrayConverter)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.DateConverter)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.NumberConverter)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.StringConverter)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ConversionPropertiesProcessor)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ConversionFileProcessor)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ConversionAnnotationProcessor)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.TypeConverterCreator)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.TypeConverterHolder)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.TextProvider)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.LocaleProvider)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.ActionProxyFactory)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ObjectTypeDeterminer)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (org.apache.struts2.dispatcher.mapper.ActionMapper)
INFO 2019-05-25 20:12:47:
Choosing bean (jakarta) for (org.apache.struts2.dispatcher.multipart.MultiPartRequest)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (org.apache.struts2.views.freemarker.FreemarkerManager)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (org.apache.struts2.components.UrlRenderer)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.validator.ActionValidatorManager)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.util.ValueStackFactory)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.util.reflection.ReflectionProvider)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.util.reflection.ReflectionContextFactory)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.util.PatternMatcher)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (org.apache.struts2.util.ContentTypeMatcher)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (org.apache.struts2.dispatcher.StaticContentLoader)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.UnknownHandlerManager)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (org.apache.struts2.views.util.UrlHelper)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.util.TextParser)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (org.apache.struts2.dispatcher.DispatcherErrorHandler)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.security.ExcludedPatternsChecker)
INFO 2019-05-25 20:12:47:
Choosing bean (struts) for (com.opensymphony.xwork2.security.AcceptedPatternsChecker)
INFO 2019-05-25 20:12:47:
系统初始化中...v4.20170616B
INFO 2019-05-25 20:12:47:
项目ID:WF_CAR---项目名称:car---启动模式:local
INFO 2019-05-25 20:12:47:
配置库  wf_tianyi链接池创建成功!
INFO 2019-05-25 20:12:47:
业务库CAR链接池创建成功!
INFO 2019-05-25 20:12:47:
ftpz FTP服务器 127.0.0.1:21 配置完毕.
INFO 2019-05-25 20:12:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_CUSTOM_DEF where FUNCNO=0
INFO 2019-05-25 20:12:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_CUSTOM_DETAIL where FUNCNO=0
INFO 2019-05-25 20:12:47:
本系统未定义初始化环境变量.
INFO 2019-05-25 20:12:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select wm_concat(distinct trim(func_type)) from WF_CAR.sys_window_def
INFO 2019-05-25 20:12:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select wm_concat(distinct trim(inputtype)) from WF_CAR.sys_form_detail
INFO 2019-05-25 20:12:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select count(*) from WF_CAR.sys_query_detail where chart_col is not null and chart_col<>'none'
INFO 2019-05-25 20:12:47:
WFINFO>>窗口类型(db)：[{"type":"F","detail":"date,select,text,uploadfile"},{"type":"Q","detail":""}]
INFO 2019-05-25 20:12:47:
系统启动成功！ 
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:12:58:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 20:12:58:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:12:58:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义W:2
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[30ms]非JSON找到定义Q:2
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:12:58:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[7ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:12:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 20:12:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 20:12:59:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义W:18
INFO 2019-05-25 20:12:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 20:12:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:12:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 20:12:59:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义Q:22
INFO 2019-05-25 20:12:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:12:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:12:59:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[7ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:13:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:13:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:13:00:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[8ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:15
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[16ms]非JSON找到定义F:18
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='05c8afc549000da5df5fe3fab15a1d29'
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select  detailsid key,detailsact from ruledetails
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台列表绑定完成。SQL:select  detailsid key,detailsact from ruledetails
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[49ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

ERROR2019-05-25 20:13:01:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-06503: PL/SQL: 函数未返回值
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 12
ORA-06512: 在 line 1

INFO 2019-05-25 20:13:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[56ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:13:03:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 20:13:03:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:13:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

ERROR2019-05-25 20:13:03:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-06503: PL/SQL: 函数未返回值
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 12
ORA-06512: 在 line 1

INFO 2019-05-25 20:13:03:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[52ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:14:01:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 20:14:01:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:14:01:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:2
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[14ms]非JSON找到定义Q:2
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:14:02:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 20:14:02:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:14:02:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:2
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义Q:2
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:02:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 20:14:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 20:14:03:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:18
INFO 2019-05-25 20:14:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 20:14:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:14:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 20:14:03:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[16ms]非JSON找到定义Q:22
INFO 2019-05-25 20:14:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:14:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:03:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[8ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:14:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:04:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:14:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:05:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:15
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义F:18
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
ERROR2019-05-25 20:14:07:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-06503: PL/SQL: 函数未返回值
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 12
ORA-06512: 在 line 1

INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

ERROR2019-05-25 20:14:07:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-06503: PL/SQL: 函数未返回值
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 12
ORA-06512: 在 line 1

INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[49ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:14:07:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[96ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:14:10:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 20:14:10:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:14:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 20:14:10:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[7ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:14:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 21
INFO 2019-05-25 20:14:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 21
INFO 2019-05-25 20:14:26:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:21
INFO 2019-05-25 20:14:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=24
INFO 2019-05-25 20:14:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=24 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:14:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=24 and userid='ws'
INFO 2019-05-25 20:14:27:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[17ms]非JSON找到定义Q:24
INFO 2019-05-25 20:14:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailslevel,rt.detailsact,rt.detailsmarks,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-05-25 20:14:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailslevel,rt.detailsact,rt.detailsmarks,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:27:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[6ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailslevel,rt.detailsact,rt.detailsmarks,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:14:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:14:30:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:18:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 20:18:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 20:18:49:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 20:18:49:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:18:49:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:18:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:18:49:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:18:49:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:18:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

ERROR2019-05-25 20:18:49:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-06503: PL/SQL: 函数未返回值
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 12
ORA-06512: 在 line 1

ERROR2019-05-25 20:18:49:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_rulemoney(?)} error.
ORA-06503: PL/SQL: 函数未返回值
ORA-06512: 在 "CAR.W_RULE_RULEMONEY", line 12
ORA-06512: 在 line 1

INFO 2019-05-25 20:18:49:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[43ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:18:49:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[81ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:18:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:18:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:18:51:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1061ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:27:59:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 20:27:59:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:27:59:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义Q:2
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:27:59:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:28:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 20:28:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 20:28:01:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:18
INFO 2019-05-25 20:28:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 20:28:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:28:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 20:28:01:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[17ms]非JSON找到定义Q:22
INFO 2019-05-25 20:28:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:28:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:28:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:28:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 21
INFO 2019-05-25 20:28:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 21
INFO 2019-05-25 20:28:02:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:21
INFO 2019-05-25 20:28:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=24
INFO 2019-05-25 20:28:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=24 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:28:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=24 and userid='ws'
INFO 2019-05-25 20:28:02:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:24
INFO 2019-05-25 20:28:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailslevel,rt.detailsact,rt.detailsmarks,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-05-25 20:28:02:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailslevel,rt.detailsact,rt.detailsmarks,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:28:02:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailslevel,rt.detailsact,rt.detailsmarks,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:28:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:28:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:28:03:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:15
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义F:18
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:28:05:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:28:07:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"}]}
INFO 2019-05-25 20:28:07:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:28:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR

INFO 2019-05-25 20:28:07:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[6ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:28:09:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"}]}
INFO 2019-05-25 20:28:09:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:28:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 无证驾驶 --  CHAR

INFO 2019-05-25 20:28:09:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[12ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:28:12:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"驾驶与准驾车型不符",type:"CHAR"}]}
INFO 2019-05-25 20:28:12:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:28:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 驾驶与准驾车型不符 --  CHAR

INFO 2019-05-25 20:28:12:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[7ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:28:14:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"肇事逃逸",type:"CHAR"}]}
INFO 2019-05-25 20:28:14:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:28:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 肇事逃逸 --  CHAR

INFO 2019-05-25 20:28:14:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[6ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:33:39:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 20:33:39:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:33:39:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:2
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:2
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:33:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:33:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 20:33:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 20:33:40:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:18
INFO 2019-05-25 20:33:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 20:33:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:33:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 20:33:40:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[18ms]非JSON找到定义Q:22
INFO 2019-05-25 20:33:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:33:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:33:40:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:33:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:33:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:33:41:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:15
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义F:18
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 20:33:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 20:33:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 20:33:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 20:33:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 20:33:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 20:33:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 20:33:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 20:33:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 20:33:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 20:33:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"500",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 20:33:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 20:33:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 500 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 20:33:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:48:31:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 20:48:31:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:48:31:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义Q:2
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:48:31:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[6ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:48:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 20:48:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 20:48:34:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[1864ms]非JSON找到定义W:18
INFO 2019-05-25 20:48:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 20:48:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:48:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 20:48:34:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:22
INFO 2019-05-25 20:48:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:48:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:48:34:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:48:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:48:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:48:35:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:48:58:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 20:48:58:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:48:58:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:2
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[18ms]非JSON找到定义Q:2
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:48:58:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:49:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 20:49:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 20:49:00:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义W:18
INFO 2019-05-25 20:49:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 20:49:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:49:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 20:49:00:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[20ms]非JSON找到定义Q:22
INFO 2019-05-25 20:49:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:49:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:49:00:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义W:24
INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义F:27
INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[6ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:49:01:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:49:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:49:03:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:51:37:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 20:51:37:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:51:37:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:2
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[16ms]非JSON找到定义Q:2
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:51:37:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:51:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 20:51:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 20:51:38:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:18
INFO 2019-05-25 20:51:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 20:51:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:51:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 20:51:38:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义Q:22
INFO 2019-05-25 20:51:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:51:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:51:38:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[7ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:24
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义F:27
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]后台绑定sql数据完成。SQL:select '' ruleid,                '' carid,                '' ruletime,                '' rulevio,                '' rulemoney,                '' rulemarks,                '' ruledebt,                '' lasttime                from dual
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:51:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:51:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:51:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:51:41:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:51:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 20:51:43:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]后台绑定sql数据完成。SQL:select '' ruleid,                '' carid,                '' ruletime,                '' rulevio,                '800' rulemoney,                '' rulemarks,                '' ruledebt,                '' lasttime                from dual
INFO 2019-05-25 20:51:43:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:51:43:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:51:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:51:43:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:51:43:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:51:43:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:51:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:51:43:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:51:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:51:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:51:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:51:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 20:51:47:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台绑定sql数据完成。SQL:select '' ruleid,                '' carid,                '' ruletime,                '' rulevio,                '800' rulemoney,                '' rulemarks,                '' ruledebt,                '' lasttime                from dual
INFO 2019-05-25 20:51:47:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:51:47:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:51:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:51:47:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:51:47:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:51:47:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:51:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:51:47:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:51:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:51:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:51:48:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:52:17:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 20:52:17:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 20:52:17:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:2
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[27ms]非JSON找到定义Q:2
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:52:17:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[6ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:52:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 20:52:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 20:52:18:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:18
INFO 2019-05-25 20:52:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 20:52:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:52:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 20:52:18:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[361ms]非JSON找到定义Q:22
INFO 2019-05-25 20:52:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:52:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:52:18:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[8ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:24
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义F:27
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台绑定sql数据完成。SQL:select '' ruleid,                '' carid,                '' ruletime,                '' rulevio,                '' rulemoney,                '' rulemarks,                '' ruledebt,                '' lasttime                from dual
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 20:52:21:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:52:23:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:52:23:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:52:23:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:52:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 20:52:24:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]后台绑定sql数据完成。SQL:select 'fy01' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '闯红灯' rulevio,                '200' rulemoney,                '200' rulemarks,                '0' ruledebt,                '2019-06-08' lasttime                from dual
INFO 2019-05-25 20:52:24:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"}]}
INFO 2019-05-25 20:52:24:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:52:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR

INFO 2019-05-25 20:52:24:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:52:24:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"}]}
INFO 2019-05-25 20:52:24:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:52:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR

INFO 2019-05-25 20:52:24:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:52:29:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"}]}
INFO 2019-05-25 20:52:29:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:52:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 无证驾驶 --  CHAR

INFO 2019-05-25 20:52:29:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[6ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:52:33:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"驾驶与准驾车型不符的车辆",type:"CHAR"}]}
INFO 2019-05-25 20:52:33:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 20:52:33:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 驾驶与准驾车型不符的车辆 --  CHAR

INFO 2019-05-25 20:52:33:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[14ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 20:57:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 16
INFO 2019-05-25 20:57:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 16
INFO 2019-05-25 20:57:36:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[14ms]非JSON找到定义W:16
INFO 2019-05-25 20:57:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=20
INFO 2019-05-25 20:57:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=20 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 20:57:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=20 and userid='ws'
INFO 2019-05-25 20:57:36:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[17ms]非JSON找到定义Q:20
INFO 2019-05-25 20:57:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 20:57:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:57:36:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[11ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:58:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 20:58:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:58:00:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:58:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 20:58:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 20:58:07:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[7ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:04:24:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:04:24:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:04:24:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:2
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:04:24:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:04:25:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:04:25:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:04:25:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:2
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:04:25:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:04:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:04:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:04:26:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:18
INFO 2019-05-25 21:04:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:04:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:04:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:04:26:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义Q:22
INFO 2019-05-25 21:04:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:04:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:04:26:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:24
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义F:27
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台绑定sql数据完成。SQL:select '' ruleid,                '' carid,                '' ruletime,                '' rulevio,                '' rulemoney,                '' rulemarks,                '' ruledebt,                '' lasttime                from dual
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:04:31:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:04:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:04:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:04:32:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:04:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:04:34:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]后台绑定sql数据完成。SQL:select 'fy01' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '闯红灯' rulevio,                '200' rulemoney,                '200' rulemarks,                '0' ruledebt,                '2019-06-08' lasttime                from dual
INFO 2019-05-25 21:04:34:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"}]}
INFO 2019-05-25 21:04:34:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:04:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR

INFO 2019-05-25 21:04:34:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"}]}
INFO 2019-05-25 21:04:34:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:04:34:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:04:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR

INFO 2019-05-25 21:04:34:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:04:36:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"}]}
INFO 2019-05-25 21:04:36:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:04:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 无证驾驶 --  CHAR

INFO 2019-05-25 21:04:36:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[15ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:04:37:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>***CMD={check_func:"w_rule_update",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemoney",value:"300",type:"NUMBER"},{name:"ru.rulemarks",value:"200",type:"NUMBER"},{name:"ru.ruleid",value:"fy01",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-06-08",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:04:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_update(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

ERROR2019-05-25 21:04:37:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_update(?)} error.
ORA-06550: 第 1 行, 第 13 列: 
PLS-00306: 调用 'W_RULE_UPDATE' 时参数个数或类型错误
ORA-06550: 第 1 行, 第 7 列: 
PL/SQL: Statement ignored

INFO 2019-05-25 21:04:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"肇事逃逸",type:"CHAR"}]}
INFO 2019-05-25 21:04:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:04:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 肇事逃逸 --  CHAR

INFO 2019-05-25 21:04:44:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[9ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:04:50:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>***CMD={check_func:"w_rule_update",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"肇事逃逸",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.rulemarks",value:"300",type:"NUMBER"},{name:"ru.ruleid",value:"fy01",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-06-08",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:04:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_update(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

ERROR2019-05-25 21:04:50:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_update(?)} error.
ORA-06550: 第 1 行, 第 13 列: 
PLS-00306: 调用 'W_RULE_UPDATE' 时参数个数或类型错误
ORA-06550: 第 1 行, 第 7 列: 
PL/SQL: Statement ignored

INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:07:24:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:07:24:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:07:24:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:2
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[14ms]非JSON找到定义Q:2
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:07:24:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:07:25:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:07:25:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:07:25:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:2
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:2
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:07:25:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:07:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:07:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:07:26:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:18
INFO 2019-05-25 21:07:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:07:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:07:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:07:26:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:22
INFO 2019-05-25 21:07:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:07:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:07:26:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:24
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义F:27
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]后台绑定sql数据完成。SQL:select 'lc111' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '1' rulevio,                '800' rulemoney,                '0' rulemarks,                '0' ruledebt,                '2019-05-31' lasttime                from dual
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

INFO 2019-05-25 21:07:28:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:07:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:07:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:07:32:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:07:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:07:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]后台绑定sql数据完成。SQL:select 'lc111' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '1' rulevio,                '800' rulemoney,                '0' rulemarks,                '0' ruledebt,                '2019-05-31' lasttime                from dual
INFO 2019-05-25 21:07:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 21:07:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[3ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:07:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

INFO 2019-05-25 21:07:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:07:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 21:07:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:07:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

INFO 2019-05-25 21:07:39:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[4ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:07:40:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"}]}
INFO 2019-05-25 21:07:40:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:07:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 无证驾驶 --  CHAR

INFO 2019-05-25 21:07:40:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[13ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:07:42:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>***CMD={check_func:"w_rule_update",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemarks",value:"0",type:"NUMBER"},{name:"ru.ruleid",value:"lc111",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-05-31",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:07:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_update(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

ERROR2019-05-25 21:07:42:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_update(?)} error.
ORA-06550: 第 1 行, 第 13 列: 
PLS-00306: 调用 'W_RULE_UPDATE' 时参数个数或类型错误
ORA-06550: 第 1 行, 第 7 列: 
PL/SQL: Statement ignored

INFO 2019-05-25 21:07:45:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[1ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"驾驶与准驾车型不符的车辆",type:"CHAR"}]}
INFO 2019-05-25 21:07:45:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:07:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 驾驶与准驾车型不符的车辆 --  CHAR

INFO 2019-05-25 21:07:45:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[9ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:07:46:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>***CMD={check_func:"w_rule_update",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"驾驶与准驾车型不符的车辆",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemarks",value:"0",type:"NUMBER"},{name:"ru.ruleid",value:"lc111",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-05-31",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:07:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_update(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

ERROR2019-05-25 21:07:46:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_update(?)} error.
ORA-06550: 第 1 行, 第 13 列: 
PLS-00306: 调用 'W_RULE_UPDATE' 时参数个数或类型错误
ORA-06550: 第 1 行, 第 7 列: 
PL/SQL: Statement ignored

INFO 2019-05-25 21:07:52:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>***CMD={check_func:"w_rule_update",check_data:[{name:"ru.ruletime",value:"2019-05-31",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"驾驶与准驾车型不符的车辆",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-31",type:"DATE"},{name:"ru.rulemarks",value:"0",type:"NUMBER"},{name:"ru.ruleid",value:"lc111",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-05-31",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:07:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_update(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-31 --  DATE

ERROR2019-05-25 21:07:52:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_update(?)} error.
ORA-06550: 第 1 行, 第 13 列: 
PLS-00306: 调用 'W_RULE_UPDATE' 时参数个数或类型错误
ORA-06550: 第 1 行, 第 7 列: 
PL/SQL: Statement ignored

INFO 2019-05-25 21:13:44:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:13:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:13:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:13:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:13:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:13:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:15:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:15:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:15:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:15:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:15:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:15:09:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:15:09:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:15:09:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:15:09:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:15:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:15:09:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:15:09:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:15:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:15:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:15:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:15:10:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:15:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:15:10:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:15:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:15:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:15:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:15:10:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义W:2
INFO 2019-05-25 21:15:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:15:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:15:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:15:10:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[23ms]非JSON找到定义Q:2
INFO 2019-05-25 21:15:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:15:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:15:12:
WFDEBUG>>*>>WF_CAR>>ws>>D7AA1425F01BAE0B803EA53B529CE511>>[2246ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:15:35:
Parsing configuration file [struts-default.xml]
INFO 2019-05-25 21:15:35:
Parsing configuration file [struts-plugin.xml]
INFO 2019-05-25 21:15:35:
Parsing configuration file [struts.xml]
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.ObjectFactory)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ActionFactory)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ResultFactory)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ConverterFactory)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.InterceptorFactory)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.ValidatorFactory)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.factory.UnknownHandlerFactory)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.FileManagerFactory)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.XWorkConverter)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.CollectionConverter)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.ArrayConverter)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.DateConverter)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.NumberConverter)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.impl.StringConverter)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ConversionPropertiesProcessor)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ConversionFileProcessor)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ConversionAnnotationProcessor)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.TypeConverterCreator)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.TypeConverterHolder)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.TextProvider)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.LocaleProvider)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.ActionProxyFactory)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.conversion.ObjectTypeDeterminer)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (org.apache.struts2.dispatcher.mapper.ActionMapper)
INFO 2019-05-25 21:15:35:
Choosing bean (jakarta) for (org.apache.struts2.dispatcher.multipart.MultiPartRequest)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (org.apache.struts2.views.freemarker.FreemarkerManager)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (org.apache.struts2.components.UrlRenderer)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.validator.ActionValidatorManager)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.util.ValueStackFactory)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.util.reflection.ReflectionProvider)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.util.reflection.ReflectionContextFactory)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.util.PatternMatcher)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (org.apache.struts2.util.ContentTypeMatcher)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (org.apache.struts2.dispatcher.StaticContentLoader)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.UnknownHandlerManager)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (org.apache.struts2.views.util.UrlHelper)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.util.TextParser)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (org.apache.struts2.dispatcher.DispatcherErrorHandler)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.security.ExcludedPatternsChecker)
INFO 2019-05-25 21:15:35:
Choosing bean (struts) for (com.opensymphony.xwork2.security.AcceptedPatternsChecker)
INFO 2019-05-25 21:15:35:
系统初始化中...v4.20170616B
INFO 2019-05-25 21:15:35:
项目ID:WF_CAR---项目名称:car---启动模式:local
INFO 2019-05-25 21:15:35:
配置库  wf_tianyi链接池创建成功!
INFO 2019-05-25 21:15:35:
业务库CAR链接池创建成功!
INFO 2019-05-25 21:15:35:
ftpz FTP服务器 127.0.0.1:21 配置完毕.
INFO 2019-05-25 21:15:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_CUSTOM_DEF where FUNCNO=0
INFO 2019-05-25 21:15:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_CUSTOM_DETAIL where FUNCNO=0
INFO 2019-05-25 21:15:35:
本系统未定义初始化环境变量.
INFO 2019-05-25 21:15:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select wm_concat(distinct trim(func_type)) from WF_CAR.sys_window_def
INFO 2019-05-25 21:15:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select wm_concat(distinct trim(inputtype)) from WF_CAR.sys_form_detail
INFO 2019-05-25 21:15:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select count(*) from WF_CAR.sys_query_detail where chart_col is not null and chart_col<>'none'
INFO 2019-05-25 21:15:35:
WFINFO>>窗口类型(db)：[{"type":"F","detail":"date,select,text,uploadfile"},{"type":"Q","detail":""}]
INFO 2019-05-25 21:15:35:
系统启动成功！ 
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERID#值为：ws
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.USERNAME#值为：ws
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.SEX#值为：男
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.ADDRESS#值为：湖北黄冈
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.MOBILEPHONE#值为：139959766290
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-USERINFO.AGE#值为：23
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYEAR#值为：2019
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTMONTH#值为：05
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTDAY#值为：25
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYM#值为：201905
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-CURRENTYMD#值为：20190525
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-TODAY#值为：2019-05-25
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>UC变量#0-BYEAR#值为：2019
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select count(*) from user_tables where table_name = 'WF_USERINFOEX'
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from WF_CAR.SYS_USERINFO where USERID='ws'
INFO 2019-05-25 21:15:45:
ws 登录成功---Sat May 25 21:15:45 CST 2019
INFO 2019-05-25 21:15:45:
WFDEBUG>>*>>*>>ws>>89BF00039A3066D929C244BCFD59173E>>ws 登录成功---Sat May 25 21:15:45 CST 2019
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:15:47:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:15:47:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:15:47:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义W:2
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:15:47:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[28ms]非JSON找到定义Q:2
INFO 2019-05-25 21:15:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:15:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:15:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[10ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:15:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:15:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:15:49:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[18ms]非JSON找到定义W:18
INFO 2019-05-25 21:15:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:15:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:15:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:15:49:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[30ms]非JSON找到定义Q:22
INFO 2019-05-25 21:15:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:15:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:15:49:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[17ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义W:24
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[22ms]非JSON找到定义F:27
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台绑定sql数据完成。SQL:select 'fy01' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '闯红灯' rulevio,                '200' rulemoney,                '200' rulemarks,                '0' ruledebt,                '2019-06-08' lasttime                from dual
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"}]}
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"}]}
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[68ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[76ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR

INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR

INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[27ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:15:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[30ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:15:56:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>***CMD={check_func:"w_update_rule",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemarks",value:"207",type:"NUMBER"},{name:"ru.ruleid",value:"fy01",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-06-08",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:15:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_update_rule(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

INFO 2019-05-25 21:15:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_rule_update(?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR
	ru.ruletime: 2019-05-24 --  DATE
	ru.rulemarks: 207 --  NUMBER
	ru.ruleid: fy01 --  CHAR
	ru.ruledebt: 0 --  NUMBER
	ru.lasttime: 2019-06-08 --  DATE
	ru.carid: sw --  CHAR
	userinfo.userid: ws --  CHAR

INFO 2019-05-25 21:16:04:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 21:16:04:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:16:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 21:16:04:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[10ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:16:05:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>***CMD={check_func:"w_update_rule",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemarks",value:"207",type:"NUMBER"},{name:"ru.ruleid",value:"fy01",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-06-08",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:16:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_update_rule(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

INFO 2019-05-25 21:16:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_rule_update(?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR
	ru.ruletime: 2019-05-24 --  DATE
	ru.rulemarks: 207 --  NUMBER
	ru.ruleid: fy01 --  CHAR
	ru.ruledebt: 0 --  NUMBER
	ru.lasttime: 2019-06-08 --  DATE
	ru.carid: sw --  CHAR
	userinfo.userid: ws --  CHAR

INFO 2019-05-25 21:16:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:16:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:16:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[14ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:16:41:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:16:41:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:16:41:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[16ms]非JSON找到定义W:2
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[22ms]非JSON找到定义Q:2
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:16:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[12ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:16:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 16
INFO 2019-05-25 21:16:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 16
INFO 2019-05-25 21:16:42:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[16ms]非JSON找到定义W:16
INFO 2019-05-25 21:16:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=20
INFO 2019-05-25 21:16:42:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=20 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:16:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=20 and userid='ws'
INFO 2019-05-25 21:16:43:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[20ms]非JSON找到定义Q:20
INFO 2019-05-25 21:16:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:16:43:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:16:43:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[16ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:17:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:17:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:17:29:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:18
INFO 2019-05-25 21:17:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:17:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:17:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:17:29:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[14ms]非JSON找到定义Q:22
INFO 2019-05-25 21:17:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:17:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:17:30:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:24
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义F:27
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]后台绑定sql数据完成。SQL:select 'fy01' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '酒驾' rulevio,                '200' rulemoney,                '207' rulemarks,                '0' ruledebt,                '2019-06-08' lasttime                from dual
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 21:17:35:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:17:37:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"}]}
INFO 2019-05-25 21:17:37:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:17:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR

INFO 2019-05-25 21:17:37:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[9ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:17:39:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>***CMD={check_func:"w_update_rule",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemarks",value:"207",type:"NUMBER"},{name:"ru.ruleid",value:"fy01",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-06-08",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:17:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_update_rule(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

INFO 2019-05-25 21:17:39:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_rule_update(?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR
	ru.ruletime: 2019-05-24 --  DATE
	ru.rulemarks: 207 --  NUMBER
	ru.ruleid: fy01 --  CHAR
	ru.ruledebt: 0 --  NUMBER
	ru.lasttime: 2019-06-08 --  DATE
	ru.carid: sw --  CHAR
	userinfo.userid: ws --  CHAR

INFO 2019-05-25 21:17:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:17:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:17:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[8ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:17:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:17:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]后台绑定sql数据完成。SQL:select 'fy01' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '闯红灯' rulevio,                '200' rulemoney,                '207' rulemarks,                '0' ruledebt,                '2019-06-08' lasttime                from dual
INFO 2019-05-25 21:17:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"}]}
INFO 2019-05-25 21:17:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:17:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR

INFO 2019-05-25 21:17:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:17:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"}]}
INFO 2019-05-25 21:17:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:17:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR

INFO 2019-05-25 21:17:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:17:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"}]}
INFO 2019-05-25 21:17:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:17:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 无证驾驶 --  CHAR

INFO 2019-05-25 21:17:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[15ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:17:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>***CMD={check_func:"w_update_rule",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemarks",value:"207",type:"NUMBER"},{name:"ru.ruleid",value:"fy01",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-06-08",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:17:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_update_rule(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

INFO 2019-05-25 21:17:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_rule_update(?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 无证驾驶 --  CHAR
	ru.ruletime: 2019-05-24 --  DATE
	ru.rulemarks: 207 --  NUMBER
	ru.ruleid: fy01 --  CHAR
	ru.ruledebt: 0 --  NUMBER
	ru.lasttime: 2019-06-08 --  DATE
	ru.carid: sw --  CHAR
	userinfo.userid: ws --  CHAR

INFO 2019-05-25 21:17:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:17:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:17:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:18:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:18:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:18:51:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:18:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:18:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:18:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:18:51:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:18:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:18:51:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:18:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:18:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:18:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:18:52:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-05-25 21:18:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:18:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:18:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:18:52:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:2
INFO 2019-05-25 21:18:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:18:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:18:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 16
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 16
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:16
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=20
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=20 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=20 and userid='ws'
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[18ms]非JSON找到定义Q:20
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义W:18
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义Q:22
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:18:53:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:24
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义F:27
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台绑定sql数据完成。SQL:select 'fy01' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '无证驾驶' rulevio,                '200' rulemoney,                '207' rulemarks,                '0' ruledebt,                '2019-06-08' lasttime                from dual
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"}]}
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 无证驾驶 --  CHAR

INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"}]}
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 无证驾驶 --  CHAR

INFO 2019-05-25 21:18:57:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:18:59:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 21:18:59:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:18:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 21:18:59:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[8ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:19:00:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>***CMD={check_func:"w_update_rule",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemoney",value:"500",type:"NUMBER"},{name:"ru.rulemarks",value:"207",type:"NUMBER"},{name:"ru.ruleid",value:"fy01",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-06-08",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:19:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_update_rule(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

INFO 2019-05-25 21:19:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_rule_update(?,?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR
	ru.ruletime: 2019-05-24 --  DATE
	ru.rulemoney: 500 --  NUMBER
	ru.rulemarks: 207 --  NUMBER
	ru.ruleid: fy01 --  CHAR
	ru.ruledebt: 0 --  NUMBER
	ru.lasttime: 2019-06-08 --  DATE
	ru.carid: sw --  CHAR
	userinfo.userid: ws --  CHAR

INFO 2019-05-25 21:19:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:19:03:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:19:03:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:19:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:19:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台绑定sql数据完成。SQL:select 'fy01' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '无证驾驶' rulevio,                '200' rulemoney,                '207' rulemarks,                '0' ruledebt,                '2019-06-08' lasttime                from dual
INFO 2019-05-25 21:19:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"}]}
INFO 2019-05-25 21:19:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:19:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 无证驾驶 --  CHAR

INFO 2019-05-25 21:19:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:19:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"}]}
INFO 2019-05-25 21:19:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:19:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 无证驾驶 --  CHAR

INFO 2019-05-25 21:19:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:19:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:19:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:19:29:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:19:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:19:31:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台绑定sql数据完成。SQL:select 'fy01' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '无证驾驶' rulevio,                '200' rulemoney,                '207' rulemarks,                '0' ruledebt,                '2019-06-08' lasttime                from dual
INFO 2019-05-25 21:19:31:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"}]}
INFO 2019-05-25 21:19:31:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:19:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 无证驾驶 --  CHAR

INFO 2019-05-25 21:19:31:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:19:31:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"无证驾驶",type:"CHAR"}]}
INFO 2019-05-25 21:19:31:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:19:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 无证驾驶 --  CHAR

INFO 2019-05-25 21:19:31:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:19:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:19:32:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:19:32:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:19:34:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:19:34:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:19:34:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:2
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义Q:2
INFO 2019-05-25 21:19:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:19:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:19:35:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:19:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:19:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:19:37:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:18
INFO 2019-05-25 21:19:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:19:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:19:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:19:37:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[17ms]非JSON找到定义Q:22
INFO 2019-05-25 21:19:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:19:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:19:37:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:24
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义F:27
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]后台绑定sql数据完成。SQL:select '' ruleid,                '' carid,                '' ruletime,                '' rulevio,                '' rulemoney,                '' rulemarks,                '' ruledebt,                '' lasttime                from dual
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:19:38:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:19:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:19:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:19:40:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:20:59:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:20:59:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:20:59:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:2
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:20:59:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:21:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:21:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:21:05:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:18
INFO 2019-05-25 21:21:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:21:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:21:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:21:05:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[16ms]非JSON找到定义Q:22
INFO 2019-05-25 21:21:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:21:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:21:05:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:24
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义F:27
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台绑定sql数据完成。SQL:select '' ruleid,                '' carid,                '' ruletime,                '' rulevio,                '' rulemoney,                '' rulemarks,                '' ruledebt,                '' lasttime                from dual
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:21:06:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:21:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:21:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:21:08:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:22:47:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:22:47:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:22:47:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:2
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:22:47:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:2
INFO 2019-05-25 21:22:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:22:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:22:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:22:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:22:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:22:49:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:18
INFO 2019-05-25 21:22:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:22:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:22:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:22:49:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:22
INFO 2019-05-25 21:22:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:22:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:22:49:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:24
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义F:27
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台绑定sql数据完成。SQL:select 'lc111' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '1' rulevio,                '800' rulemoney,                '0' rulemarks,                '0' ruledebt,                '2019-05-31' lasttime                from dual
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

INFO 2019-05-25 21:22:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:22:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:22:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:22:53:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:22:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:22:56:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台绑定sql数据完成。SQL:select 'fy01' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '酒驾' rulevio,                '500' rulemoney,                '207' rulemarks,                '0' ruledebt,                '2019-06-08' lasttime                from dual
INFO 2019-05-25 21:22:56:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 21:22:56:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:22:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 21:22:56:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:22:56:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 21:22:56:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:22:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 21:22:56:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:23:00:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>***CMD={check_func:"w_update_rule",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemoney",value:"500",type:"NUMBER"},{name:"ru.rulemarks",value:"207",type:"NUMBER"},{name:"ru.ruleid",value:"fy01",type:"CHAR"},{name:"ru.ruledebt",value:"4",type:"NUMBER"},{name:"ru.lasttime",value:"2019-06-08",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:23:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_update_rule(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

INFO 2019-05-25 21:23:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_rule_update(?,?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR
	ru.ruletime: 2019-05-24 --  DATE
	ru.rulemoney: 500 --  NUMBER
	ru.rulemarks: 207 --  NUMBER
	ru.ruleid: fy01 --  CHAR
	ru.ruledebt: 4 --  NUMBER
	ru.lasttime: 2019-06-08 --  DATE
	ru.carid: sw --  CHAR
	userinfo.userid: ws --  CHAR

INFO 2019-05-25 21:23:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:23:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:23:00:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:23:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:23:07:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台绑定sql数据完成。SQL:select 'fy01' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '酒驾' rulevio,                '500' rulemoney,                '207' rulemarks,                '4' ruledebt,                '2019-06-08' lasttime                from dual
INFO 2019-05-25 21:23:07:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 21:23:07:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:23:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 21:23:07:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:23:07:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 21:23:07:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:23:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 21:23:07:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:23:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>***CMD={check_func:"w_update_rule",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemoney",value:"500",type:"NUMBER"},{name:"ru.rulemarks",value:"207",type:"NUMBER"},{name:"ru.ruleid",value:"fy01",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-06-08",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:23:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_update_rule(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

INFO 2019-05-25 21:23:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_rule_update(?,?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR
	ru.ruletime: 2019-05-24 --  DATE
	ru.rulemoney: 500 --  NUMBER
	ru.rulemarks: 207 --  NUMBER
	ru.ruleid: fy01 --  CHAR
	ru.ruledebt: 0 --  NUMBER
	ru.lasttime: 2019-06-08 --  DATE
	ru.carid: sw --  CHAR
	userinfo.userid: ws --  CHAR

INFO 2019-05-25 21:23:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:23:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:23:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:23:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 21
INFO 2019-05-25 21:23:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 21
INFO 2019-05-25 21:23:12:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:21
INFO 2019-05-25 21:23:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=24
INFO 2019-05-25 21:23:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=24 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:23:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=24 and userid='ws'
INFO 2019-05-25 21:23:12:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[17ms]非JSON找到定义Q:24
INFO 2019-05-25 21:23:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailslevel,rt.detailsact,rt.detailsmarks,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-05-25 21:23:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailslevel,rt.detailsact,rt.detailsmarks,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:23:12:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailslevel,rt.detailsact,rt.detailsmarks,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:23:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 23
INFO 2019-05-25 21:23:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 23
INFO 2019-05-25 21:23:18:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义W:23
INFO 2019-05-25 21:23:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=26
INFO 2019-05-25 21:23:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=26 order by ord
INFO 2019-05-25 21:23:18:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义F:26
INFO 2019-05-25 21:23:23:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select rt.detailslevel,rt.detailsact,rt.detailsmarks,rt.detailsfine from ruledetails rt where (1=1   ))
INFO 2019-05-25 21:23:23:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,rt.detailslevel,rt.detailsact,rt.detailsmarks,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:23:23:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]24:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,rt.detailslevel,rt.detailsact,rt.detailsmarks,rt.detailsfine from ruledetails rt where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:23:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:23:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:23:25:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:24:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:24:15:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]后台绑定sql数据完成。SQL:select 'fy01' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '酒驾' rulevio,                '500' rulemoney,                '207' rulemarks,                '4' ruledebt,                '2019-06-08' lasttime                from dual
INFO 2019-05-25 21:24:15:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 21:24:15:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:24:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 21:24:15:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:24:15:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 21:24:15:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:24:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 21:24:15:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:24:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:24:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:24:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:24:26:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:24:26:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:24:26:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义W:2
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义Q:2
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:24:26:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:24:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:24:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:24:27:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:18
INFO 2019-05-25 21:24:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:24:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:24:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:24:27:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[18ms]非JSON找到定义Q:22
INFO 2019-05-25 21:24:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:24:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:24:27:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:24
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义F:27
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]后台绑定sql数据完成。SQL:select '' ruleid,                '' carid,                '' ruletime,                '' rulevio,                '' rulemoney,                '' rulemarks,                '' ruledebt,                '' lasttime                from dual
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:24:29:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:24:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:24:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:24:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:24:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:24:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:24:47:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:26:45:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:26:45:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:26:45:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:2
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:26:45:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:26:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:26:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:26:46:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:18
INFO 2019-05-25 21:26:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:26:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:26:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:26:46:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:22
INFO 2019-05-25 21:26:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:26:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:26:46:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 12
INFO 2019-05-25 21:27:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 12
INFO 2019-05-25 21:27:00:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义W:12
INFO 2019-05-25 21:27:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=14
INFO 2019-05-25 21:27:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=14 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:27:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=14 and userid='ws'
INFO 2019-05-25 21:27:00:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义Q:14
INFO 2019-05-25 21:27:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.password,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard,ui.userheadfile from userinfo ui where (1=1   ))
INFO 2019-05-25 21:27:00:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.password,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard,ui.userheadfile from userinfo ui where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:00:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[8ms]14:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.password,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard,ui.userheadfile from userinfo ui where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:27:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:05:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:27:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:08:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 16
INFO 2019-05-25 21:27:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 16
INFO 2019-05-25 21:27:11:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:16
INFO 2019-05-25 21:27:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=20
INFO 2019-05-25 21:27:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=20 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:27:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=20 and userid='ws'
INFO 2019-05-25 21:27:11:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义Q:20
INFO 2019-05-25 21:27:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:27:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:11:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[8ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:27:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 21 and 40
INFO 2019-05-25 21:27:16:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 21 and 40
INFO 2019-05-25 21:27:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:27:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:27:21:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 21 and 40
INFO 2019-05-25 21:27:21:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 21 and 40
INFO 2019-05-25 21:27:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:27:25:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:25:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:27:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:30:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:27:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:35:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:27:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:36:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:24
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义F:27
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台绑定sql数据完成。SQL:select 'fy01' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '酒驾' rulevio,                '500' rulemoney,                '207' rulemarks,                '0' ruledebt,                '2019-06-08' lasttime                from dual
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"酒驾",type:"CHAR"}]}
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 酒驾 --  CHAR

INFO 2019-05-25 21:27:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:27:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:27:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:47:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:27:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:27:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台绑定sql数据完成。SQL:select 'lc111' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '1' rulevio,                '800' rulemoney,                '0' rulemarks,                '0' ruledebt,                '2019-05-31' lasttime                from dual
INFO 2019-05-25 21:27:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 21:27:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:27:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

INFO 2019-05-25 21:27:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:27:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 21:27:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:27:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

INFO 2019-05-25 21:27:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:28:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:28:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:28:06:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:29:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:29:34:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:29:34:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:29:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:29:53:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:29:53:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:29:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:29:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:29:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:30:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:30:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:30:13:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[10ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:30:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:30:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:30:14:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:30:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.password,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard,ui.userheadfile from userinfo ui where (1=1   ))
INFO 2019-05-25 21:30:16:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.password,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard,ui.userheadfile from userinfo ui where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:30:16:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]14:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.password,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard,ui.userheadfile from userinfo ui where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:30:22:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:30:22:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:30:22:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:31:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:31:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:31:54:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:31:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:31:55:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:31:55:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:2
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:31:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:31:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 16
INFO 2019-05-25 21:31:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 16
INFO 2019-05-25 21:31:57:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义W:16
INFO 2019-05-25 21:31:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=20
INFO 2019-05-25 21:31:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=20 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:31:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=20 and userid='ws'
INFO 2019-05-25 21:31:57:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:20
INFO 2019-05-25 21:31:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:31:57:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:31:57:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[8ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:32:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:32:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:32:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:32:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:32:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:32:28:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:18
INFO 2019-05-25 21:32:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:32:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:32:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:32:28:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义Q:22
INFO 2019-05-25 21:32:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:32:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:32:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:32:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:32:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:32:30:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:32:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:32:36:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:32:36:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:33:26:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:33:26:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:33:26:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[3ms]非JSON找到定义W:2
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:33:26:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[14ms]非JSON找到定义Q:2
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:18
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义Q:22
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:27:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:33:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:30:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 12
INFO 2019-05-25 21:33:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 12
INFO 2019-05-25 21:33:41:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:12
INFO 2019-05-25 21:33:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=14
INFO 2019-05-25 21:33:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=14 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:33:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=14 and userid='ws'
INFO 2019-05-25 21:33:41:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:14
INFO 2019-05-25 21:33:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ui.userid,ui.username,ui.password,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard,ui.userheadfile from userinfo ui where (1=1   ))
INFO 2019-05-25 21:33:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.password,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard,ui.userheadfile from userinfo ui where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]14:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,ui.userid,ui.username,ui.password,ui.sex,ui.address,ui.mobilephone,ui.age,ui.idcard,ui.userheadfile from userinfo ui where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:33:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:49:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 16
INFO 2019-05-25 21:33:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 16
INFO 2019-05-25 21:33:50:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:16
INFO 2019-05-25 21:33:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=20
INFO 2019-05-25 21:33:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=20 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:33:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=20 and userid='ws'
INFO 2019-05-25 21:33:50:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义Q:20
INFO 2019-05-25 21:33:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ))
INFO 2019-05-25 21:33:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:50:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]20:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ul.logtime DESC ) rn,ul.userid,ul.logdetails,ul.logtime,ul.logremark from userlog ul where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:33:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:33:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 24
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 24
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:24
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=27
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=27 order by ord
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义F:27
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='6acd0e745331c1864e776c3f179b4e2b'
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台绑定sql数据完成。SQL:select 'lc111' ruleid,                'sw' carid,                '2019-05-24' ruletime,                '1' rulevio,                '800' rulemoney,                '0' rulemarks,                '0' ruledebt,                '2019-05-31' lasttime                from dual
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"1",type:"CHAR"}]}
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 1 --  CHAR

INFO 2019-05-25 21:34:46:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:34:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_updaterulemoney",params:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"}]}
INFO 2019-05-25 21:34:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_updaterulemoney
INFO 2019-05-25 21:34:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_updaterulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR

INFO 2019-05-25 21:34:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_updaterulemoney
INFO 2019-05-25 21:34:49:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>***CMD={check_func:"w_update_rule",check_data:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}],proc0:"w_rule_update",data0:[{name:"ru.rulevio",value:"闯红灯",type:"CHAR"},{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.rulemoney",value:"50",type:"NUMBER"},{name:"ru.rulemarks",value:"0",type:"NUMBER"},{name:"ru.ruleid",value:"lc111",type:"CHAR"},{name:"ru.ruledebt",value:"0",type:"NUMBER"},{name:"ru.lasttime",value:"2019-05-31",type:"DATE"},{name:"ru.carid",value:"sw",type:"CHAR"},{name:"userinfo.userid",value:"ws",type:"CHAR"}],wfName:"", wfAct:"", wfNodeId:"", wfState:"", wfUniKey:"", wfVars:"", wfKeyVal:"", wfComment:"", wfCollab:""}
INFO 2019-05-25 21:34:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_update_rule(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

INFO 2019-05-25 21:34:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {call w_rule_update(?,?,?,?,?,?,?,?,?,?)}
参数列表	参数名: 值  --  类型
	ru.rulevio: 闯红灯 --  CHAR
	ru.ruletime: 2019-05-24 --  DATE
	ru.rulemoney: 50 --  NUMBER
	ru.rulemarks: 0 --  NUMBER
	ru.ruleid: lc111 --  CHAR
	ru.ruledebt: 0 --  NUMBER
	ru.lasttime: 2019-05-31 --  DATE
	ru.carid: sw --  CHAR
	userinfo.userid: ws --  CHAR

INFO 2019-05-25 21:34:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:34:49:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:34:49:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:40:45:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:40:45:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:40:45:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:40:45:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义Q:2
INFO 2019-05-25 21:40:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:40:46:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:40:46:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:40:47:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:40:48:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:40:48:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:40:48:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:2
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义Q:2
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:40:48:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:40:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:40:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:40:54:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:18
INFO 2019-05-25 21:40:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:40:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:40:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:40:55:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:22
INFO 2019-05-25 21:40:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:40:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:40:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:15
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义F:18
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"",type:"DATE"},{name:"ru.lasttime",value:"",type:"DATE"}]}
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime:  --  DATE
	ru.lasttime:  --  DATE

INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:40:58:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:41:05:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-25",type:"DATE"},{name:"ru.lasttime",value:"2019-05-31",type:"DATE"}]}
INFO 2019-05-25 21:41:05:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:41:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-25 --  DATE
	ru.lasttime: 2019-05-31 --  DATE

INFO 2019-05-25 21:41:05:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[8ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:41:15:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-25",type:"DATE"},{name:"ru.lasttime",value:"2019-05-31",type:"DATE"}]}
INFO 2019-05-25 21:41:15:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:41:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-25 --  DATE
	ru.lasttime: 2019-05-31 --  DATE

INFO 2019-05-25 21:41:15:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:49:04:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:49:04:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:49:04:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义W:2
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义Q:2
INFO 2019-05-25 21:49:04:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:49:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2194ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:49:06:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:49:06:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:49:06:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:2
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:2
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:49:06:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:49:07:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:18
INFO 2019-05-25 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:49:07:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[12ms]非JSON找到定义Q:22
INFO 2019-05-25 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:49:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:49:07:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:15
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义F:18
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"",type:"DATE"},{name:"ru.lasttime",value:"",type:"DATE"}]}
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime:  --  DATE
	ru.lasttime:  --  DATE

INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:49:10:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:49:20:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-25",type:"DATE"},{name:"ru.lasttime",value:"2019-05-24",type:"DATE"}]}
INFO 2019-05-25 21:49:20:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:49:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-25 --  DATE
	ru.lasttime: 2019-05-24 --  DATE

INFO 2019-05-25 21:49:20:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:49:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"},{name:"ru.lasttime",value:"2019-05-31",type:"DATE"}]}
INFO 2019-05-25 21:49:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:49:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE
	ru.lasttime: 2019-05-31 --  DATE

INFO 2019-05-25 21:49:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:49:31:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"23-5月 -19",type:"DATE"},{name:"ru.lasttime",value:"2019-05-30",type:"DATE"}]}
INFO 2019-05-25 21:49:31:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:49:31:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 23-5月 -19 --  DATE
	ru.lasttime: 2019-05-30 --  DATE

ERROR2019-05-25 21:49:31:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_lasttime(?,?)} error.
Unparseable date: "23-5月 -19 00:00:00"
INFO 2019-05-25 21:49:31:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[57ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:49:33:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"",type:"DATE"},{name:"ru.lasttime",value:"2019-05-29",type:"DATE"}]}
INFO 2019-05-25 21:49:33:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:49:33:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime:  --  DATE
	ru.lasttime: 2019-05-29 --  DATE

INFO 2019-05-25 21:49:33:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:49:35:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"",type:"DATE"},{name:"ru.lasttime",value:"2019-05-31",type:"DATE"}]}
INFO 2019-05-25 21:49:35:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:49:35:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime:  --  DATE
	ru.lasttime: 2019-05-31 --  DATE

INFO 2019-05-25 21:49:35:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[8ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:49:37:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"",type:"DATE"},{name:"ru.lasttime",value:"2019-05-18",type:"DATE"}]}
INFO 2019-05-25 21:49:37:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:49:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime:  --  DATE
	ru.lasttime: 2019-05-18 --  DATE

INFO 2019-05-25 21:49:37:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:49:40:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-17",type:"DATE"},{name:"ru.lasttime",value:"2019-05-24",type:"DATE"}]}
INFO 2019-05-25 21:49:40:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:49:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-17 --  DATE
	ru.lasttime: 2019-05-24 --  DATE

INFO 2019-05-25 21:49:40:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:52:37:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:52:37:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:52:37:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:2
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义Q:2
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:52:37:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[8ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:52:38:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:52:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:52:40:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[1580ms]非JSON找到定义W:18
INFO 2019-05-25 21:52:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:52:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:52:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:52:40:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:22
INFO 2019-05-25 21:52:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:52:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:52:40:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:52:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:52:40:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:52:40:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义W:15
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义F:18
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"",type:"DATE"},{name:"ru.lasttime",value:"",type:"DATE"}]}
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime:  --  DATE
	ru.lasttime:  --  DATE

INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[6ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:52:41:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:52:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:52:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:52:50:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:52:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:52:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:52:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:52:50:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:52:50:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:52:51:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:2
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义Q:2
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:52:51:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:52:51:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:52:51:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:52:51:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:2
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:2
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:18
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[22ms]非JSON找到定义Q:22
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:52:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[9ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:15
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义F:18
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"",type:"DATE"},{name:"ru.lasttime",value:"",type:"DATE"}]}
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime:  --  DATE
	ru.lasttime:  --  DATE

INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 21:52:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:52:55:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:54:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:54:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:54:11:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:54:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:54:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:54:13:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:54:13:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:54:13:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:2
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[13ms]非JSON找到定义Q:2
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:54:13:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:54:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:54:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:54:14:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:18
INFO 2019-05-25 21:54:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:54:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:54:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:54:15:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[11ms]非JSON找到定义Q:22
INFO 2019-05-25 21:54:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:54:15:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:54:15:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[8ms]非JSON找到定义W:15
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义F:18
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"",type:"DATE"},{name:"ru.lasttime",value:"",type:"DATE"}]}
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime:  --  DATE
	ru.lasttime:  --  DATE

INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"",type:"DATE"}]}
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime:  --  DATE

ERROR2019-05-25 21:54:18:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_lasttime(?)} error.
ORA-06550: 第 1 行, 第 13 列: 
PLS-00306: 调用 'W_RULE_LASTTIME' 时参数个数或类型错误
ORA-06550: 第 1 行, 第 7 列: 
PL/SQL: Statement ignored

INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:54:18:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[69ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:54:20:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-25",type:"DATE"}]}
INFO 2019-05-25 21:54:20:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:54:20:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-25 --  DATE

ERROR2019-05-25 21:54:20:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_lasttime(?)} error.
ORA-06550: 第 1 行, 第 13 列: 
PLS-00306: 调用 'W_RULE_LASTTIME' 时参数个数或类型错误
ORA-06550: 第 1 行, 第 7 列: 
PL/SQL: Statement ignored

INFO 2019-05-25 21:54:20:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[51ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:54:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-25",type:"DATE"}]}
INFO 2019-05-25 21:54:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:54:28:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-25 --  DATE

ERROR2019-05-25 21:54:28:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_lasttime(?)} error.
ORA-06550: 第 1 行, 第 13 列: 
PLS-00306: 调用 'W_RULE_LASTTIME' 时参数个数或类型错误
ORA-06550: 第 1 行, 第 7 列: 
PL/SQL: Statement ignored

INFO 2019-05-25 21:54:28:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[58ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:54:30:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-25",type:"DATE"}]}
INFO 2019-05-25 21:54:30:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:54:30:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-25 --  DATE

ERROR2019-05-25 21:54:30:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_lasttime(?)} error.
ORA-06550: 第 1 行, 第 13 列: 
PLS-00306: 调用 'W_RULE_LASTTIME' 时参数个数或类型错误
ORA-06550: 第 1 行, 第 7 列: 
PL/SQL: Statement ignored

INFO 2019-05-25 21:54:30:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[79ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:54:33:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-25",type:"DATE"},{name:"ru.lasttime",value:"2019-05-31",type:"DATE"}]}
INFO 2019-05-25 21:54:33:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:54:33:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?,?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-25 --  DATE
	ru.lasttime: 2019-05-31 --  DATE

INFO 2019-05-25 21:54:33:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:57:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:57:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:57:06:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:57:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:57:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 21:57:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 21:57:06:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 21:57:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 21:57:06:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 21:57:06:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 21:57:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 21:57:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 21:57:07:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:2
INFO 2019-05-25 21:57:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 21:57:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:57:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 21:57:07:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义Q:2
INFO 2019-05-25 21:57:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 21:57:07:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:57:07:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:57:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 21:57:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 21:57:08:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:18
INFO 2019-05-25 21:57:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 21:57:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 21:57:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 21:57:08:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[10ms]非JSON找到定义Q:22
INFO 2019-05-25 21:57:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 21:57:08:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:57:08:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[4ms]非JSON找到定义W:15
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义F:18
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"",type:"DATE"}]}
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime:  --  DATE

ERROR2019-05-25 21:57:09:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_lasttime(?)} error.
ORA-06550: 第 1 行, 第 13 列: 
PLS-00306: 调用 'W_RULE_LASTTIME' 时参数个数或类型错误
ORA-06550: 第 1 行, 第 7 列: 
PL/SQL: Statement ignored

INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[5ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[8ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 21:57:09:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[86ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:57:11:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-25",type:"DATE"}]}
INFO 2019-05-25 21:57:11:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:57:11:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-25 --  DATE

ERROR2019-05-25 21:57:11:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_lasttime(?)} error.
ORA-06550: 第 1 行, 第 13 列: 
PLS-00306: 调用 'W_RULE_LASTTIME' 时参数个数或类型错误
ORA-06550: 第 1 行, 第 7 列: 
PL/SQL: Statement ignored

INFO 2019-05-25 21:57:11:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[64ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 21:57:14:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-25",type:"DATE"}]}
INFO 2019-05-25 21:57:14:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 21:57:14:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-25 --  DATE

ERROR2019-05-25 21:57:14:
WFERROR>>*>>WF_CAR>>NOSESSN>>NOSESSN>>调用过程函数错误：OrclCaller call {? = call w_rule_lasttime(?)} error.
ORA-06550: 第 1 行, 第 13 列: 
PLS-00306: 调用 'W_RULE_LASTTIME' 时参数个数或类型错误
ORA-06550: 第 1 行, 第 7 列: 
PL/SQL: Statement ignored

INFO 2019-05-25 21:57:14:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[58ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 22:03:51:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select sur.roleid, sur.userid, sr.rolename  from   WF_CAR.sys_user_role sur,   WF_CAR.sys_role sr where trim(sr.roleid) = trim(sur.roleid)   and trim(sur.userid) = 'ws' order by ROLEID
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.sys_role_table where roleid = '0'
INFO 2019-05-25 22:03:51:
WFINFO>>角色0有0个角色行条件被加载
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):SELECT * FROM (SELECT DISTINCT 'WF_CAR' SYS_PROJECTID, D.NODEID, D.LEAF, D.PARENT_NODEID, D.NODENAME,D.WINNO SYS_WINNO,D.LEVELID,decode(D.NODEICO,null,' ',D.NODEICO) NODEICO,D.BINDING_DATA FROM  WF_CAR.SYS_MENU_NODE D, (SELECT NODEID FROM  WF_CAR.SYS_ROLE_MENU A WHERE  A.ROLEID IN ('0')) C, WF_CAR.SYS_MENU_PARENTS E WHERE E.NODEID=C.NODEID AND D.NODEID=E.PARENT_NODEID) ORDER BY LEVELID
INFO 2019-05-25 22:03:51:
WFINFO>>表WF_CAR.SYS_USER_SYSTEM_FUNC没有找到。
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select 'WF_CAR:' || m.winno || ':' || rtrim(m.nodename) from  WF_CAR.sys_role_menu rm, WF_CAR.sys_menu_node m where  rm.nodeid = m.nodeid and rm.roleid in ('0') and rm.isdefault = 'Y'
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 2
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 2
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[5ms]非JSON找到定义W:2
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=2
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=2 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=2 and userid='ws'
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[22ms]非JSON找到定义Q:2
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ))
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 22:03:51:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]2:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by rownum asc) rn,c.carid,c.userid,c.carbrand,c.carmodel,c.carper,c.cartype,c.registime,c.checktime from car c where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 22:03:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 18
INFO 2019-05-25 22:03:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 18
INFO 2019-05-25 22:03:52:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[7ms]非JSON找到定义W:18
INFO 2019-05-25 22:03:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DEF where FUNCNO=22
INFO 2019-05-25 22:03:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_QUERY_DETAIL where FUNCNO=22 and FIELDNAME <> '***' order by ord
INFO 2019-05-25 22:03:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select dispexp from  WF_CAR.User_Display_Set where funcno=22 and userid='ws'
INFO 2019-05-25 22:03:52:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[15ms]非JSON找到定义Q:22
INFO 2019-05-25 22:03:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select count(*)  from ( select ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ))
INFO 2019-05-25 22:03:52:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 22:03:52:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]22:Q查询完成。PagedSQL:select * from ( select  row_number() over(order by ru.ruletime DESC ) rn,ru.ruleid,ru.carid,ru.ruletime,ru.rulevio,ru.rulemoney,ru.ruledebt,ru.rulemarks,ru.lasttime from rule ru where (1=1   ) )  where rn between 1 and 20
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select attach_wins from  WF_CAR.SYS_WINDOW_DEF where winno = 15
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_WINDOW_DEF where winno  = 15
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[6ms]非JSON找到定义W:15
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DEF where FUNCNO=18
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlHashMapArray):select * from  WF_CAR.SYS_FORM_DETAIL where FUNCNO=18 order by ord
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>NOSESSN>>NOSESSN>>[9ms]非JSON找到定义F:18
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeScalar):select sql from WF_CAR.sys_bind_sql where sqlid='a7250c95a7dd19bf486555f8d0f44108'
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>执行前的SQL(executeSqlObjArray):select carid key,carid from car
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]后台列表绑定完成。SQL:select carid key,carid from car
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]开始处理存储过程json。{name:"w_rule_rulemoney",params:[{name:"ru.rulevio",value:"",type:"CHAR"}]}
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemoney
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemoney(?)}
参数列表	参数名: 值  --  类型
	ru.rulevio:  --  CHAR

INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]调用存储过程完成。w_rule_rulemoney
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney:  --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"",type:"DATE"}]}
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime:  --  DATE

INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_rulemarks",params:[{name:"ru.rulemoney",value:"800",type:"NUMBER"},{name:"ru.ruledebt",value:"",type:"NUMBER"}]}
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_rulemarks
INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_rulemarks(?,?)}
参数列表	参数名: 值  --  类型
	ru.rulemoney: 800 --  NUMBER
	ru.ruledebt:  --  NUMBER

INFO 2019-05-25 22:03:54:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_rulemarks
INFO 2019-05-25 22:03:56:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-25",type:"DATE"}]}
INFO 2019-05-25 22:03:56:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 22:03:56:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-25 --  DATE

INFO 2019-05-25 22:03:56:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[7ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 22:04:05:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-31",type:"DATE"}]}
INFO 2019-05-25 22:04:05:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[1ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 22:04:05:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-31 --  DATE

INFO 2019-05-25 22:04:05:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[3ms]调用存储过程完成。w_rule_lasttime
INFO 2019-05-25 22:04:12:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[0ms]开始处理存储过程json。{name:"w_rule_lasttime",params:[{name:"ru.ruletime",value:"2019-05-24",type:"DATE"}]}
INFO 2019-05-25 22:04:12:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[2ms]json处理完成。开始调用存储过程。w_rule_lasttime
INFO 2019-05-25 22:04:12:
WFDEBUG>>*>>*>>NOSESSN>>NOSESSN>>调用过程函数 {? = call w_rule_lasttime(?)}
参数列表	参数名: 值  --  类型
	ru.ruletime: 2019-05-24 --  DATE

INFO 2019-05-25 22:04:12:
WFDEBUG>>*>>WF_CAR>>ws>>89BF00039A3066D929C244BCFD59173E>>[4ms]调用存储过程完成。w_rule_lasttime
